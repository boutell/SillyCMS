app.config:
    charset:       UTF-8
    error_handler: null
    csrf_secret:   xxxxxxxxxx
    router:        { resource: "%kernel.root_dir%/config/routing.yml" }
    validation:    { enabled: true, annotations: true }
    templating:    {} #assets_version: SomeVersionScheme
    session:
        default_locale: en
        lifetime:       3600
        auto_start:     true

security.config:
    # There must be an "encoder" for every user class. All user classes extend
    # AccountInterface. I'm using in-memory users so I'm not sure why I really need
    # an encoder. I think this is what is done to the password before it is compared
    # to the setting under "providers" below, so in principle I could have a hashed
    # password in this config file.
    encoders:
        Symfony\Component\Security\User\AccountInterface: plaintext
    providers:
        main:
            users:
                admin: { password: demo, roles: ROLE_ADMIN }
    # Require a proper login for /admin actions, only an anonymous user to browse
    access_control:
        - { path: /admin/.*, role: ROLE_ADMIN }
        - { path: /.*, role: IS_AUTHENTICATED_ANONYMOUSLY }
    firewalls:
        main:
            pattern:    ^.*$
            form-login: true
            anonymous: true
            logout: true
                    
# Twig Configuration
twig.config:
    debug:            %kernel.debug%
    strict_variables: %kernel.debug%

## Doctrine Configuration
doctrine.dbal:
    dbname:   sillycms
    user:     root
    password: root
doctrine.orm:
    auto_generate_proxy_classes: %kernel.debug%
    mappings:
        SillyCMSBundle: ~

## Swiftmailer Configuration
#swiftmailer.config:
#    transport:  smtp
#    encryption: ssl
#    auth_mode:  login
#    host:       smtp.gmail.com
#    username:   xxxxxxxx
#    password:   xxxxxxxx

# Custom services

services:
  twig.extension.WikiText:
       class: Application\SillyCMSBundle\Twig\Extensions\WikiText
       tags:
           - { name: twig.extension }
