<?xml version="1.0" ?>

<container xmlns="http://www.symfony-project.org/schema/dic/services"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.symfony-project.org/schema/dic/services http://www.symfony-project.org/schema/dic/services/services-1.0.xsd">

    <parameters>
        <parameter key="security.context.class">Symfony\Component\Security\Core\SecurityContext</parameter>
        <parameter key="security.context.always_authenticate">false</parameter>

        <parameter key="security.account_checker.class">Symfony\Component\Security\Core\User\AccountChecker</parameter>

        <parameter key="security.encoder_factory.generic.class">Symfony\Component\Security\Core\Encoder\EncoderFactory</parameter>
        <parameter key="security.encoder.digest.class">Symfony\Component\Security\Core\Encoder\MessageDigestPasswordEncoder</parameter>
        <parameter key="security.encoder.plain.class">Symfony\Component\Security\Core\Encoder\PlaintextPasswordEncoder</parameter>

        <parameter key="security.user.provider.in_memory.class">Symfony\Component\Security\Core\User\InMemoryUserProvider</parameter>

        <parameter key="security.authentication.trust_resolver.class">Symfony\Component\Security\Core\Authentication\AuthenticationTrustResolver</parameter>
        <parameter key="security.authentication.trust_resolver.anonymous_class">Symfony\Component\Security\Core\Authentication\Token\AnonymousToken</parameter>
        <parameter key="security.authentication.trust_resolver.rememberme_class">Symfony\Component\Security\Core\Authentication\Token\RememberMeToken</parameter>

        <parameter key="security.authentication.manager.class">Symfony\Component\Security\Core\Authentication\AuthenticationProviderManager</parameter>

        <parameter key="security.authentication.session_strategy.class">Symfony\Component\Security\Http\Session\SessionAuthenticationStrategy</parameter>
        <parameter key="security.authentication.session_strategy.strategy">migrate</parameter>

        <parameter key="security.access.decision_manager.class">Symfony\Component\Security\Core\Authorization\AccessDecisionManager</parameter>
        <parameter key="security.access.decision_manager.strategy">affirmative</parameter>
        <parameter key="security.access.decision_manager.allow_if_all_abstain">false</parameter>
        <parameter key="security.access.decision_manager.allow_if_equal_granted_denied">true</parameter>

        <parameter key="security.access.simple_role_voter.class">Symfony\Component\Security\Core\Authorization\Voter\RoleVoter</parameter>
        <parameter key="security.access.authenticated_voter.class">Symfony\Component\Security\Core\Authorization\Voter\AuthenticatedVoter</parameter>
        <parameter key="security.access.role_hierarchy_voter.class">Symfony\Component\Security\Core\Authorization\Voter\RoleHierarchyVoter</parameter>

        <parameter key="security.firewall.class">Symfony\Component\Security\Http\Firewall</parameter>
        <parameter key="security.firewall.map.class">Symfony\Bundle\SecurityBundle\Security\FirewallMap</parameter>
        <parameter key="security.firewall.context.class">Symfony\Bundle\SecurityBundle\Security\FirewallContext</parameter>
        <parameter key="security.matcher.class">Symfony\Component\HttpFoundation\RequestMatcher</parameter>

        <parameter key="security.role_hierarchy.class">Symfony\Component\Security\Core\Role\RoleHierarchy</parameter>
    </parameters>

    <services>
        <service id="security.context" class="%security.context.class%">
            <argument type="service" id="security.authentication.manager" />
            <argument type="service" id="security.access.decision_manager" />
            <argument>%security.context.always_authenticate%</argument>
        </service>

        <!-- Authentication related services -->
        <service id="security.authentication.manager" class="%security.authentication.manager.class%" public="false">
            <argument type="collection" />
        </service>

        <service id="security.authentication.trust_resolver" class="%security.authentication.trust_resolver.class%" public="false">
            <argument>%security.authentication.trust_resolver.anonymous_class%</argument>
            <argument>%security.authentication.trust_resolver.rememberme_class%</argument>
        </service>

        <service id="security.authentication.session_strategy" class="%security.authentication.session_strategy.class%" public="false">
            <argument>%security.authentication.session_strategy.strategy%</argument>
        </service>

        <service id="security.encoder_factory.generic" class="%security.encoder_factory.generic.class%" public="false">
            <argument type="collection"></argument>
        </service>

        <service id="security.encoder_factory" alias="security.encoder_factory.generic"></service>
        
        <service id="security.account_checker" class="%security.account_checker.class%" public="false" />


        <!-- Authorization related services -->
        <service id="security.access.decision_manager" class="%security.access.decision_manager.class%" public="false">
            <argument type="collection"></argument>
            <argument>%security.access.decision_manager.strategy%</argument>
            <argument>%security.access.decision_manager.allow_if_all_abstain%</argument>
            <argument>%security.access.decision_manager.allow_if_equal_granted_denied%</argument>
        </service>

        <service id="security.role_hierarchy" class="%security.role_hierarchy.class%" public="false">
            <argument>%security.role_hierarchy.roles%</argument>
        </service>


        <!-- Security Voters -->
        <service id="security.access.simple_role_voter" class="%security.access.simple_role_voter.class%" public="false">
            <tag name="security.voter" />
        </service>

        <service id="security.access.authenticated_voter" class="%security.access.authenticated_voter.class%" public="false">
            <argument type="service" id="security.authentication.trust_resolver" />
            <tag name="security.voter" />
        </service>

        <service id="security.access.role_hierarchy_voter" class="%security.access.role_hierarchy_voter.class%" public="false">
            <argument type="service" id="security.role_hierarchy" />
        </service>


        <!-- Firewall related services -->
        <service id="security.firewall" class="%security.firewall.class%">
            <tag name="kernel.listener" event="core.request" method="handle" priority="-128" />
            <argument type="service" id="security.firewall.map" />
            <argument type="service" id="event_dispatcher" />
        </service>

        <service id="security.firewall.map" class="%security.firewall.map.class%" public="false">
            <argument type="service" id="service_container" />
            <argument type="collection" />
        </service>

        <service id="security.firewall.context" class="%security.firewall.context.class%" abstract="true">
            <argument type="collection" />
            <argument type="service" id="security.exception_listener" />
        </service>        
    </services>
</container>
