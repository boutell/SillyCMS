This document serves as a list of BC breaks between the 1.x series and 2.0.
------------------------------

Zend_Loader_Autoloader:
 * Added "un/registerPrefix()" methods. These will handle classes that have a
   vendor prefix.
 * Modified the "un/registerNamespace()" methods to handle PHP 5.3 namespaces,
   and not vendor prefixes. If you are using registerNamespace() and have not
   updated your code to use namespaces, you should update your calls to use
   registerPrefix() instead.
 * push/unshiftAutoloader() now accepts a third, boolean argument for indicating
   whether the autoloader is a namespace or prefix autoloader. By default, it
   assumes it's a namespace autoloader. If you are registering a prefix
   autoloader in this way, pass a boolean "true" value as the third argument.

Zend_Config:
 * "Writer" renamed to "Writer\AbstractWriter"
 * "Writer_FileAbstract" renamed to "Writer\AbstractFileWriter"
 * "Writer_Array" renamed to "Writer\ArrayWriter"

Zend_Currency:
 * "Zend_Currency" prefix now becomes "Zend\Currency" namespace
 * "Zend_Currency" becomes "Zend\Currency\Currency"
 * "CurrencyInterface" is renamed to "CurrencyServiceInterface"

Zend_Log:
 * "Log" becomes "Logger"
 * "FactoryInterface" becomes "Factory"
   * Additionally, the factory() method's first argument is now optional,
     defaulting to "array()". If you have implemented this interface in the
     past, you will need to update your method signature.
 * "Filter_Interface" becomes "Filter"
 * "Filter_Abstract" becomes "Filter\AbstractFilter"
 * "Filter_Suppress" becomes "Filter\SuppressFilter"
 * "Formatter_Interface" becomes "Formatter"
 * "Writer_Abstract" becomes "Writer\AbstractWriter"
 * Created a new interface, "Writer"; typehint on this instead of
   "Writer\AbstractWriter"

Zend_Cache:
 * "Backend" renamed to "Backend\AbstractBackend"
 * "Backend_Interface" renamed to "Backend"
 * New interface created, "Frontend". Any previous typehints for
   "Zend_Cache_Core" should now be rewritten to "Zend\Cache\Frontend"
 * "Core" renamed to "Frontend\Core"
 * "Backend_ExtendedInterface" renamed to "Backend\ExtendedBackend"
 * "Backend_ZendServer" renamed to "Backend\ZendServer\AbstractZendServer"
 * "Backend_Static" renamed to "Backend\StaticBackend"
 * "Backend_Test" renamed to "Backend\TestBackend"
 * "Frontend_Class" renamed to "Frontend\ClassFrontend"
 * "Frontend_Function" renamed to "Frontend\FunctionFrontend"

Zend_Locale:
 * Locale data resources moved from Locale/Data/ to Locale/Data/resources/

Zend_Measure:
 * "Zend_Measure" prefix now becomes "Zend\Measure" namespace
 * "Zend_Measure_Abstract" becomes "Zend\Measure\AbstractMeasure"

Zend_Memory:
 * "Zend_Memory" prefix now becomes "Zend\Memory" namespace
 * "Zend_Memory" class and "Zend_Memory::factory()" method are removed,
   "new Zend\Memory\MemoryManager(Zend\Cache\Frontend $cache = null)" has to be used 
   directly now.
 * "Zend_Memory_Container" prefix now becomes "Zend\Memory\Container" namespace
 * "Zend_Memory_Manager" becomes "Zend\Memory\MemoryManager"


Zend_Filter:
 * "Filter" broken into "FilterChain" and "StaticFilter"
   * For filter chains, use the new FilterChain class
   * For static usage, use the new StaticFilter class
     * Additionally, "filterStatic()" was renamed to "execute()"
 * "FilterInterface" renamed to "Filter"
   * Interface now defines "__invoke($value)" instead of "filter($value)". If
     you have created custom filters in the past, you will need to now implement
     Zend\Filter\Filter and rename your filter() method to __invoke().
 * "Compress_CompressInterface" renamed to "Compress\CompressionAlgorithm"
 * "Compress_CompressAbstract" renamed to "Compress\AbstractCompressionAlgorithm"
 * "Encrypt_Interface" renamed to "Encrypt\EncryptionAlgorithm"
   * Added "toString()" method to the interface; please update implementing
     classes accordingly
 * "Word_Separator_Abstract" renamed to "Word\AbstractSeparator"; please update
   extending classes accordingly.
 * Input:
   * "VALIDATE" constant removed in favor of "VALIDATOR" (already defined, but
     previously never used)
   * Class loading always uses namespaces now

Zend_Validate:
 * "Validate" broken into "AbstractValidator", "ValidatorChain" and "StaticValidator"
 * "Zend_Validate" prefix now becomes "Zend\Validator" namespace
 * "ValidatorInterface" moved to "Zend\Validator\Validator"

Zend_Uri
 * "Zend_Uri" removed
 * "Zend_Uri_Adapter_Http" becomes "Zend\URI\URL"
 * "Zend_Uri::factory()" should be replaced with "new Zend\URI\URL()"
 * Zend\URI\URL can handle any URL scheme, not just Http & Https

Zend_Http
 * "Zend_Http_*" becomes Zend\HTTP\*

Zend_OpenId
 * "Zend_OpenId_*" becomes Zend\OpenID\*

Zend_Server:
 * "Zend_Server" prefix now becomes "Zend\Server" namespace
 * "Zend_Server_Method" prefix now becomes "Zend\Server\Method" namespace
 * "Zend_Server_Reflection" prefix now becomes "Zend\Server\Reflection" namespace
 * "Zend_Server_Reflection" becomes "Zend\Server\Reflection\Reflection"
 * "Zend_Server_Reflection_Class"       becomes "Zend\Server\Reflection\ReflectionClass"
 * "Zend_Server_Reflection_Function"    becomes "Zend\Server\Reflection\FunctionReflection"
 * "Zend_Server_Reflection_Method"      becomes "Zend\Server\Reflection\ReflectionMethod"
 * "Zend_Server_Reflection_Parameter"   becomes "Zend\Server\Reflection\ReflectionParameter"
 * "Zend_Server_Reflection_ReturnValue" becomes "Zend\Server\Reflection\ReflectionReturnValue"
 * "Zend_Server_Reflection_Function_Abstract" becomes "Zend\Server\Reflection\AbstractFunction"
 
Zend_Translate
 * "Zend_Translate" prefix now becomes "Zend\Translator" namespace
 * "Zend_Translate" becomes "Zend\Translator\Translator"
 * "Zend\Translator\Adapter\Array" renamed to "Zend\Translator\Adapter\ArrayAdapter"
 * Translation adapter interface is now "Zend\Translate\Adapter"

Zend_Acl
 * "Zend_Acl_Role_Interface" becomes "Zend\Acl\Role"
 * "Zend_Acl_Role" becomes "Zend\Acl\Role\GenericRole"
 * "Zend_Acl_Resource_Interface" becomes "Zend\Acl\Resource"
 * "Zend_Acl_Resource" becomes "Zend\Acl\Resource\GenericResource"
 * "Zend_Acl_Assert_Interface" becomes "Zend\Acl\Assertion"
 * Acl class:
   * "add()" removed
   * "get()" renamed to "getResource()"
   * "has()" renamed to "hasResource()"
   * "inherits()" renamed to "resourceInherits()"
   * "remove()" renamed to "removeResource()"
   * "removeAll()" renamed to "removeResourceAll()"
   * Removed "getRegisteredResources()" method (marked as deprecated)

Zend_Console
 * "Zend_Console_Getopt_Exception" becomes "Zend\Console\GetoptException"

Zend_Dom
 * "Zend_Dom_Query_Result" becomes "Zend\Dom\NodeList"
 * "Zend_Dom_Query_Css2Xpath" becomes "Zend\Dom\Css2Xpath"
 * "Zend_Dom_Query::query()" becomes "Zend\Dom\Query::execute()"

Zend_Url
 * Component renamed to Zend\URI, with class URL
 * Zend\URI\URL now provides comprehensive support for URLs, via parse_url()
 * Removed Zend_Url::factory(), and Zend_Url_Http as unnecessary.
 * "getUri()" becomes "generate()"
 * "check()" becomes "isValid()", and is no longer static
 * "fromString()" has been removed; simply pass to the constructor

Zend_HTTP
 * Component renamed to Zend_HTTP

Zend_PDF
 * "Zend_Pdf" prefix now becomes "Zend\PDF" namespace
 * "Zend_Pdf" class becomes "Zend\PDF\PDFDocument
 * "Zend_Pdf_Action_Goto" becomes "Zend\PDF\Action\GoToAction"

Zend_Barcode
 * "Zend_Barcode" prefix now becomes "Zend\Barcode" namespace
 * "Zend_Barcode" class becomes "Zend\Barcode\Barcode"
 * Barcode classes and renderers become case sensitive
 * "Pdf" barcode renderer becomes "PDF"
 * "Zend_Barcode_Object" return/parameter type is replaced with 
   "Zend\Barcode\Object\ObjectInterface" interface
   "Zend\Barcode\Object\AbstractObject implements this interface and can be used 
   for subclassing
 * Zend\Barcode\Object\ObjectInterface doesn't include static setBarcodeFont() method
   which actually sets "default" font.
 * "Zend_Barcode_Renderer" return/parameter type is replaced with 
   "Zend\Barcode\Renderer\RendererInterface" interface
   "Zend\Barcode\Renderer\AbstractRenderer implements this interface and can be used 
   for subclassing
 * Barcode objects and renderers names are case sensitive now and must start with uppercase character

Zend_Auth
 * Renamed to Zend\Authentication
 * Zend_Auth renamed to Zend\Authentication\AuthenticationService
 * Singleton removed from Zend\Authentication\AuthenticationService

Zend_Service_Abstract
 * Renamed to Zend\Service\AbstractService
 * Made set/getHttpClient() methods non-static
 * Added new set/getDefaultHTTPClient() static methods for setting global
   clients; can accept either a class name or instance. getHttpClient() will
   proxy to getDefaultHTTPClient() when no client is present.
 * Renamed Zend_Service_LiveDocx to Zend\Service\AbstractLiveDocx
 * Renamed Zend_Service_LiveDocx_MailMerge to Zend\Service\LiveDocx\MailMerge
 * Renamed Zend_Service_LiveDocx_Exception to Zend\Service\LiveDocx\Exception

Zend_Search_Lucene
 * "Zend_Search_Lucene" prefix now becomes "Zend\Search\Lucene" namespace
 * All "Zend\Search\Lucene\Lucene" methods except static create(), open(), 
   setDefault*() and getDefault*() methods are moved into new class "Zend\Search\Lucene\Index"
 * "Zend_Search_Lucene_Analysis_TokenFilter" abstract class becomes 
   "\Zend\Search\Lucene\Analysis\TokenFilter\TokenFilterInterface" interface
 * "Zend_Search_Lucene_Document" class becomes "Zend\Search\Lucene\Document\Document"
 * "Zend_Search_Lucene_Field" class becomes "Zend\Search\Lucene\Document\Field"
 * "Zend_Search_Lucene_Document_Html" class becomes "Zend\Search\Lucene\Document\HTML"
 * "Zend_Search_Lucene_Search_Highlighter_Default" class becomes 
   "\Zend\Search\Lucene\Search\Highlighter\DefaultHighlighter"

Zend_Db
 * Zend_Db becomes Zend\DB
 * Zend\DB\Table becomes Zend\DB\Table\Table
 * Various capitolization changes:
    Mysql -> MySQL, Mysqli -> MySQLi, Pdo -> PDO, Pgsql -> PGSQL, Oci -> OCI, Ibm -> IBM
    Mssql -> MSSQL, Sqlite -> SQLite, Sqlsrv -> SQLSRV

Zend_Mime:
 * Zend_Mime becomes Zend\Mime

Zend_Mail:
 * Zend_Mail becomes Zend\Mail
 * See classes mapping for other names transformations

Zend_Soap:
 * Zend_Soap becomes Zend\Soap
 * Zend_Soap_AutoDiscover becomes Zend\Soap\AutoDiscover\AutoDiscover
 * Zend_Soap_Client becomes Zend\Soap\Client\Client
 * Zend_Soap_Server becomes Zend\Soap\Server\Server
 * Zend_Soap_Wsdl becomes Zend\Soap\WSDL\WSDL
 * Zend_Soap_Wsdl_Strategy_Abstract becomes Zend\Soap\WSDL\Strategy\AbstractStrategy
 * Zend_Soap_Wsdl_Strategy_Interface becomes Zend\Soap\WSDL\Strategy\StrategyInterface
 * Wsdl -> WSDL change within classes and methods names.

Zend_Queue:
 * Zend_Queue becomes Zend\Queue
 * 'adapterNamespace' \Zend\Queue\Queue option and adapter name \Zend\Queue\Queue constructor parameter are case sensitive now
 * 'Array' adapter becomes 'ArrayAdapter'

