<sect1 id="zend.search.lucene.java-lucene">
    <title>שימוש ב Java Lucene</title>

    <sect2 id="zend.search.lucene.index-creation.file-formats">
        <title>סוגי קבצים</title>
        <para>
            אינדקס סוגי הקבצים של <code>Zend_Search_Lucene</code> תומכים בסוג בינארי עם Java Lucene גרסא 1.4 ומעלה.
        </para>

        <para>
            הסבר מלא אודות פורמט זה ניתן לקרוא כאן:
          <ulink url="http://lucene.apache.org/java/docs/fileformats.html"/>
          <footnote><para>הגרסא הנתמכת הנוכחית בפורמט אינדקס קבצים היא 2.3 החל מ Zend Framework 1.6.</para></footnote>.
        </para>
    </sect2>

    <sect2 id="zend.search.lucene.index-creation.index-directory">
        <title>תיקית אינדקס</title>

        <para>
        לאחר יצירת האינדקס, תיקית האינדקס תכיל כמה דברים:
        </para>

        <itemizedlist>
            <listitem>
                <para>
                    קובץ ה <filename>segments</filename> היא רשימת החלקים של האינדקס.
                </para>
            </listitem>
            <listitem>
                <para>
                    קבצי ה <filename>*.cfs</filename> מכילים חלקי אינדקס.
                    הערה! אינדקס אשר כתוב כמו שצריך תמיד יכיל חלק אחד.
                </para>
            </listitem>
            <listitem>
                <para>
                    הקובץ <filename>deletable</filename> מכיל רשימה של קבצים שכבר לא משומשים על ידי האינדקס, אבל לא ניתן למחוק אותם.
                </para>
            </listitem>
        </itemizedlist>
    </sect2>

    <sect2 id="zend.search.lucene.java-lucene.source-code">
        <title>קוד המקור</title>
        <para>
            תוכנת ה Java המוצגת למעלה מדגימה כיצד לאנדקס קובץ בעזרת Java Lucene:
        </para>

        <programlisting role="java"><![CDATA[
/**
* Index creation:
*/
import org.apache.lucene.index.IndexWriter;
import org.apache.lucene.document.*;

import java.io.*

...

IndexWriter indexWriter = new IndexWriter("/data/my_index",
                                          new SimpleAnalyzer(), true);

...

String filename = "/path/to/file-to-index.txt"
File f = new File(filename);

Document doc = new Document();
doc.add(Field.Text("path", filename));
doc.add(Field.Keyword("modified",DateField.timeToString(f.lastModified())));
doc.add(Field.Text("author", "unknown"));
FileInputStream is = new FileInputStream(f);
Reader reader = new BufferedReader(new InputStreamReader(is));
doc.add(Field.Text("contents", reader));

indexWriter.addDocument(doc);
]]>
</programlisting>
    </sect2>
</sect1>

<!--
vim:se ts=4 sw=4 et:
-->
