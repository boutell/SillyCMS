<?xml version="1.0" encoding="UTF-8"?>
<!-- Reviewed: no -->
<sect1 id="zend.mail.sending">
    <title>Отправка через SMTP</title>
    <para>
        Если требуется отправить сообщение электронной почты через SMTP,
        то прежде чем будет вызван метод <methodname>send()</methodname>,
        нужно создать и зарегистрировать в <classname>Zend_Mail</classname>
        объект <classname>Zend_Mail_Transport_Smtp</classname>.
        Для всех последующих вызовов <methodname>Zend_Mail::send()</methodname>
        в текущем скрипте будет использоваться SMTP:
    </para>
    <example id="zend.mail.sending.example-1">
        <title>Отправка сообщений через SMTP</title>
        <programlisting language="php"><![CDATA[
$tr = new Zend_Mail_Transport_Smtp('mail.example.com');
Zend_Mail::setDefaultTransport($tr);
]]></programlisting>
    </example>
    <para>
        Метод <methodname>setDefaultTransport()</methodname> и конструктор
        <classname>Zend_Mail_Transport_Smtp</classname> не требуют большого
        количества ресурсов при выполнении. Эти две строки кода могут быть
        выполнены во время подготовки с тем, чтобы сконфигурировать
        поведение класса <classname>Zend_Mail</classname> для остальной
        части скрипта. Это позволяет хранить конфигурационные данные
        отдельно от логики приложения — отправляется ли почта через SMTP или
        <ulink url="http://php.net/mail"><methodname>mail()</methodname></ulink>,
        какой почтовый сервер используется и т.д.
    </para>
</sect1>
<!--
vim:se ts=4 sw=4 et:
-->
