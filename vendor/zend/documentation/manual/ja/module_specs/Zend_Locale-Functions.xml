<?xml version="1.0" encoding="UTF-8"?>
<!-- Reviewed: no -->
<!-- EN-Revision: 21751 -->
<sect1 id="zend.locale.functions">

    <title>Zend_Locale の使用法</title>

    <para>
        <classname>Zend_Locale</classname> は、各ロケールについての情報も、
        自分自身のロケールに合わせた形式で提供します。
        たとえば他のロケールの名前や曜日名、月名などがこれにあたります。
    </para>

    <sect2 id="zend.locale.copying">

        <title>ロケールオブジェクトのコピー、クローン作成およびシリアライズ</title>

        <para>
            <ulink url="http://php.net/language.oop5.cloning">オブジェクトのクローンを作成</ulink>し、
            ロケールオブジェクトを正確かつ効率的に複製できます。
            ロケール対応のメソッドのほとんどは、<code>$locale->toString()</code>
            が返す文字列表現のロケールを受け付けます。
        </para>

        <example id="zend.locale.copying.example-1">
            <title>clone</title>
            <programlisting language="php"><![CDATA[
$locale = new Zend_Locale('ar');

// $locale オブジェクトをシリアライズして保存します
$serializedLocale = $locale->serialize();
// もとのオブジェクトを再度作成します
$localeObject = unserialize($serializedLocale);

// ロケールの文字列表記を取得します
$stringLocale = $locale->toString();

// $local オブジェクトの複製を作成します
$copiedLocale = clone $locale;

print "copied: ", $copiedLocale->toString();

// PHP は、__toString() 経由で自動的に toString() をコールします
print "copied: ", $copiedLocale;
]]></programlisting>
        </example>

    </sect2>

    <sect2 id="zend.locale.equals">

        <title>等式</title>

        <para>
            <classname>Zend_Locale</classname> は、
            二つのロケールを比較するための便利な関数も提供しています。
            ロケール対応のクラスはすべて、これと同等の同一性チェック機能を提供しなければなりません。
        </para>

        <example id="zend.locale.equals.example-1">
            <title>ロケールが同一かどうかの調査</title>
            <programlisting language="php"><![CDATA[
$locale = new Zend_Locale();
$mylocale = new Zend_Locale('en_US');

// ロケールが同一かどうかを調べます
if ($locale->equals($mylocale)) {
    print "これらのロケールは同一です";
}
]]></programlisting>
        </example>

    </sect2>

    <sect2 id="zend.locale.getdefault">

        <title>デフォルトのロケール</title>

        <para>
            <methodname>getDefault()</methodname> メソッドは、関連するロケールの配列を返します。
            これは、ユーザのウェブブラウザからの情報 (取得できる場合)、
            ホストサーバの環境変数および Zend Framework の設定をもとに取得します。
            <classname>Zend_Locale</classname> のコンストラクタの最初のパラメータで、
            <link linkend="zend.locale.selection">
              (<constant>BROWSER</constant>、<constant>ENVIRONMENT</constant> あるいは <constant>FRAMEWORK</constant> のうちの)
            </link>
            どの情報を優先するかを選択します。
            二番目のパラメータでは、マッチしたロケールをすべて返すのか
            あるいは最初にマッチした/一番マッチしたものを返すのかを指定します。
            ロケール対応のコンポーネントは、通常は最初のロケールのみを使用します。
            優先度が指定されている場合は、それも考慮します。
        </para>

        <example id="zend.locale.getdefault.example-1">
            <title>デフォルトロケールの取得</title>
            <programlisting language="php"><![CDATA[
$locale = new Zend_Locale();

// すべてのデフォルトロケールを返します
$found = $locale->getDefault();
print_r($found);

// ブラウザのロケールのみを返します
$found2 = $locale->getDefault(Zend_Locale::BROWSER,TRUE);
print_r($found2);
]]></programlisting>
        </example>

        <para>
            <link linkend="zend.locale.selection"><constant>BROWSER</constant>、<constant>ENVIRONMENT</constant>
            あるいは <constant>FRAMEWORK</constant>
            </link> のいずれかに対応するデフォルトロケールを取得するには、
            それぞれ対応するメソッドを使用します。
            <itemizedlist>
                <listitem>
                    <para>
                        <methodname>getEnvironment()</methodname>
                    </para>
                </listitem>
                <listitem>
                    <para>
                        <methodname>getBrowser()</methodname>
                    </para>
                </listitem>
                <listitem>
                    <para>
                        <methodname>getLocale()</methodname>
                    </para>
                </listitem>
            </itemizedlist>
        </para>

    </sect2>

    <sect2 id="zend.locale.setlocale">

        <title>新しいロケールの設定</title>

        <para>
            新しいロケールを設定するには、関数 <methodname>setLocale()</methodname>
            を使用します。この関数は、ロケール文字列をパラメータとして受け取ります。
            ロケールを省略した場合は、ロケールが
            <link linkend="zend.locale.selection">自動的に選択</link> されます。
        </para>

        <example id="zend.locale.setlocale.example-1">
            <title>setLocale</title>
            <programlisting language="php"><![CDATA[
$locale = new Zend_Locale();

// 実際のロケール
print $locale->toString();

// 新しいロケール
$locale->setLocale('aa_DJ');
print $locale->toString();
]]></programlisting>
        </example>

    </sect2>

    <sect2 id="zend.locale.getlocale">

        <title>言語および地域の取得</title>

        <para>
            <methodname>getLanguage()</methodname> を使用して、二文字の言語コード文字列を
            ロケール識別文字列から取得します。また、
            <methodname>getRegion()</methodname> を使用して、二文字の地域コード文字列を
            ロケール識別文字列から取得します。
        </para>

        <example id="zend.locale.getlocale.example-1">
            <title>getLanguage および getRegion</title>
            <programlisting language="php"><![CDATA[
$locale = new Zend_Locale();

// ロケールが 'ja_JP' の場合は、'ja' が言語として返されます
print $locale->getLanguage();

// ロケールが 'ja_JP' の場合は、地域として 'JP' が返されます
print $locale->getRegion();
]]></programlisting>
        </example>

    </sect2>

    <sect2 id="zend.locale.getlocaletoterritory">
        <title>Get the locale by giving a territory</title>

        <para>
            When you only have the territory or country then it's also possible to get a locale
            from that information. You can manually search if there is a locale for this territory
            by using <methodname>getLocaleToTerritory()</methodname>. This method returns a
            locale for the given territory or <constant>NULL</constant> when there was has no locale
            been found.
        </para>

        <example id="zend.locale.getlocaletoterritory.example-1">
            <title>getLocaleToTerritory</title>

            <programlisting language="php"><![CDATA[
$locale = Zend_Locale::getLocaleToTerritory('US');
// returns 'en_US'
]]></programlisting>
        </example>

        <note>
            <title>Uppercase territories</title>

            <para>
                When you know that you are using a territory, then you should uppercase it.
                Otherwise you could get an in your eyes false locale in return when you use other
                methods. For example: When you give "om" then
                <methodname>getLocaleToTerritory()</methodname> returns you "ar_OM" as it knows that
                you mean a territory. But all other methods will return "om", as it's also a
                language.
            </para>

            <para>
                So when you know that the given string is a territory, eighter use
                <methodname>getLocaleToTerritory()</methodname> yourself before creating a locale,
                or uppercase the input.
            </para>
        </note>
    </sect2>

    <sect2 id="zend.locale.getdata">

        <title>地域化された文字列の取得</title>

        <para>
            <methodname>getTranslationList()</methodname> を使用すると、地域化された情報を利用できます。
            これらの情報は、各地域に特化したデータを顧客に対して提供する際に
            翻訳の必要がなくなるので便利です。
            これらはすでに使用可能となっています。
        </para>

        <para>
            情報の一覧は、常に連想配列形式で返されます。
            複数の値を明示的な型に渡したい場合は、複数の値ではなく配列を渡す必要があります。
        </para>

        <example id="zend.locale.getdata.example-1">
            <title>getTranslationList</title>
            <programlisting language="php"><![CDATA[
$list = Zend_Locale::getTranslationList('language', 'de_AT');

print_r ($list);
// キーと値の組み合わせの例...
// [de] -> Deutsch
// [en] -> Englisch

// これらのキーのいずれかを getTranslation() メソッドで使用します
print Zend_Locale::getTranslation('de', 'language', 'zh');
// これは、言語 'de' を中国語で表した文字列を返します
]]></programlisting>
        </example>

        <para>
            すべての言語についてこの情報を取得できます。しかし、
            言語によってはすべての情報が提供されているわけではないものもあります。
            これらの型のいくつかについては、その型に特化した関数を用意して簡単に使用できるようにしています。
            詳細はこの一覧を参照ください。
        </para>

        <table id="zend.locale.getdata.table-1">
            <title>getTranslationList($type = null, $locale = null, $value = null) の詳細</title>
            <tgroup cols="2">
                <thead>
                    <row>
                        <entry>型</entry>
                        <entry>説明</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry><emphasis>Language</emphasis></entry>
                        <entry>
                          地域化された全言語の一覧を返します。
                          ロケールの言語部分がキー、そしてその翻訳が値となります。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>Script</emphasis></entry>
                        <entry>
                          地域化された全文字の一覧を返します。
                          ロケールの文字部分がキー、そしてその翻訳が値となります。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>Territory</emphasis></entry>
                        <entry>
                          地域化された全領域の一覧を返します。
                          ここに含まれるのは国と大陸、領域です。
                          領域と大陸のみを取得するには値として '1' を使用します。
                          国のみを取得するには値として '2' を使用します。
                          可能な場合、ロケールの国部分をキーとして使用します。
                          それ以外の場合は、この領域が使用している公式 <acronym>ISO</acronym> コードをキーとして使用します。
                          領域を翻訳したものが値となります。
                          値を省略した場合は、両方の一覧を取得します。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>Variant</emphasis></entry>
                        <entry>
                          地域化された文字変化形の一覧を返します。
                          変化形がキー、そしてその翻訳が値となります。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>Key</emphasis></entry>
                        <entry>
                          地域化されたキーの一覧を帰します。
                          このキーは、翻訳に使用する一般的な値となります。
                          通常はカレンダーや文字照合、通貨などです。
                          キーが配列のキー、そしてその翻訳が値となります。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>Type</emphasis></entry>
                        <entry>
                          翻訳されたキーの型の一覧を返します。
                          これらは、カレンダーの表現や文字列照合方式を表します。
                          値として 'collation' を使用すると、文字列照合方式の一覧を取得します。
                          値として 'calendar' を使用すると、カレンダーの型の一覧を取得します。
                          値を省略した場合は、両方の一覧を取得します。
                          型がキー、そしてその翻訳が値となります。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>Layout</emphasis></entry>
                        <entry>特別なテキスト部分の書式を決めるルールの一覧を返します。</entry>
                    </row>
                    <row>
                        <entry><emphasis>Characters</emphasis></entry>
                        <entry>このロケールで使用できる文字の一覧を返します。</entry>
                    </row>
                    <row>
                        <entry><emphasis>Delimiters</emphasis></entry>
                        <entry>このロケールで使用できるクォート文字の一覧を返します。</entry>
                    </row>
                    <row>
                        <entry><emphasis>Measurement</emphasis></entry>
                        <entry>単位の値の一覧を返します。この一覧は廃止予定です。</entry>
                    </row>
                    <row>
                        <entry><emphasis>Months</emphasis></entry>
                        <entry>
                          このロケールにおけるすべての月の表現の一覧を返します。
                          異なる表現方式がある場合は配列として返されます。
                          値を省略すると、グレゴリオ暦におけるすべての月の一覧を返します。
                          値として、既知の暦の名前を指定できます。
                          その場合は指定した暦における月の一覧を返します。
                          単純に行うには
                          <link linkend="zend.date.introduction">Zend_Date</link>
                          を使用します。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>Month</emphasis></entry>
                        <entry>
                          このロケールにおけるすべての月名の一覧を返します。
                          値を省略すると、グレゴリオ暦で通常使用する完全な月名を返します。
                          各月の数値がキー、そして月名の翻訳が値となります。
                          値として配列を指定すると、さまざまな暦や書式に対応する月を取得できます。
                          配列の最初のエントリが暦、2 番目は使用するコンテキスト、
                          そして 3 番目が返す幅となります。
                          単純に行うには
                          <link linkend="zend.date.introduction">Zend_Date</link>
                          を使用します。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>Days</emphasis></entry>
                        <entry>
                          このロケールにおけるすべての曜日の表現の一覧を返します。
                          異なる表現方式がある場合は配列として返されます。
                          値を省略すると、グレゴリオ暦におけるすべての曜日の一覧を返します。
                          値として、既知の暦の名前を指定できます。
                          その場合は指定した暦における曜日の一覧を返します。
                          単純に行うには
                          <link linkend="zend.date.introduction">Zend_Date</link>
                          を使用します。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>Day</emphasis></entry>
                        <entry>
                          このロケールにおけるすべての曜日名の一覧を返します。
                          値を省略すると、グレゴリオ暦で通常使用する完全な曜日名を返します。
                          英語の各曜日名の略称がキー、そして曜日名の翻訳が値となります。
                          値として配列を指定すると、さまざまな暦や書式に対応する曜日を取得できます。
                          配列の最初のエントリが暦、2 番目は使用するコンテキスト、
                          そして 3 番目が返す幅となります。
                          単純に行うには
                          <link linkend="zend.date.introduction">Zend_Date</link>
                          を使用します。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>Week</emphasis></entry>
                        <entry>
                          ロケール内で週の計算を適切に行うための値の一覧を返します。
                          単純に行うには
                          <link linkend="zend.date.introduction">Zend_Date</link>
                          を使用します。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>Quarters</emphasis></entry>
                        <entry>
                          このロケールにおけるすべての四半期の表現の一覧を返します。
                          異なる表現方式がある場合は配列として返されます。
                          値を省略すると、グレゴリオ暦におけるすべての四半期の一覧を返します。
                          値として、既知の暦の名前を指定できます。
                          その場合は指定した暦における四半期の一覧を返します。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>Quarter</emphasis></entry>
                        <entry>
                          このロケールにおけるすべての四半期名の一覧を返します。
                          値を省略すると、グレゴリオ暦で通常使用する完全な四半期名を返します。
                          四半期番号がキー、そして四半期名の翻訳が値となります。
                          値として配列を指定すると、さまざまな暦や書式に対応する四半期を取得できます。
                          配列の最初のエントリが暦、2 番目は使用するコンテキスト、
                          そして 3 番目が返す幅となります。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>Eras</emphasis></entry>
                        <entry>
                          このロケールにおけるすべての紀元の表現の一覧を返します。
                          値を省略すると、グレゴリオ暦におけるすべての紀元の一覧を返します。
                          値として、既知の暦の名前を指定できます。
                          その場合は指定した暦における紀元の一覧を返します。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>Era</emphasis></entry>
                        <entry>
                          このロケールにおけるすべての紀元名の一覧を返します。
                          値を省略すると、グレゴリオ暦で通常使用する完全な紀元名を返します。
                          紀元番号がキー、そして紀元名の翻訳が値となります。
                          値として配列を指定すると、さまざまな暦や書式に対応する紀元を取得できます。
                          配列の最初のエントリが暦、
                          そして 2 番目が返す幅となります。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>Date</emphasis></entry>
                        <entry>
                          このロケールにおけるすべての日付フォーマットの一覧を返します。
                          使用する日付フォーマットの名前がキー、そしてフォーマットそのものが値となります。
                          値を省略すると、グレゴリオ暦における日付フォーマットの一覧を返します。
                          暦の名前を指定すると、さまざまな暦に対応する日付フォーマットを取得できます。
                          単純に行うには
                          <link linkend="zend.date.introduction">Zend_Date</link>
                          を使用します。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>Time</emphasis></entry>
                        <entry>
                          このロケールにおけるすべての時刻フォーマットの一覧を返します。
                          使用する時刻フォーマットの名前がキー、そしてフォーマットそのものが値となります。
                          値を省略すると、グレゴリオ暦における時刻フォーマットの一覧を返します。
                          暦の名前を指定すると、さまざまな暦に対応する時刻フォーマットを取得できます。
                          単純に行うには
                          <link linkend="zend.date.introduction">Zend_Date</link>
                          を使用します。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>DateTime</emphasis></entry>
                        <entry>
                          このロケールにおけるすべての日付-時刻フォーマットの一覧を返します。
                          使用する日付-時刻フォーマットの名前がキー、そしてフォーマットそのものが値となります。
                          値を省略すると、グレゴリオ暦における日付-時刻フォーマットの一覧を返します。
                          暦の名前を指定すると、さまざまな暦に対応する日付-時刻フォーマットを取得できます。
                          単純に行うには
                          <link linkend="zend.date.introduction">Zend_Date</link>
                          を使用します。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>DateItem</emphasis></entry>
                        <entry>指定した日付項目あるいは時刻項目に関するデフォルトフォーマットの一覧を返します。</entry>
                    </row>
                    <row>
                        <entry><emphasis>DateInterval</emphasis></entry>
                        <entry>
                            間隔を表示したい際に使用する日付・時刻フォーマットの一覧を返します。
                            この一覧は多次元配列です。最初の配列が間隔の書式、
                            その次の配列が最大の差のトークンとなります。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>Field</emphasis></entry>
                        <entry>
                          地域化した日付フィールドの一覧を返します。
                          これは、カレンダーや日付で 'month' や 'year'
                          といった文字列を各国語で表示する際に使用します。
                          値を省略すると、グレゴリオ暦における一覧を返します。
                          暦の名前を指定すると、さまざまな暦に対応する一覧を取得できます。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>Relative</emphasis></entry>
                        <entry>
                          地域化した相対日付の一覧を返します。
                          'yesterday' や 'tomorrow'
                          といった文字列を各国語で表示する際に使用します。
                          値を省略すると、グレゴリオ暦における一覧を返します。
                          暦の名前を指定すると、さまざまな暦に対応する一覧を取得できます。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>Symbols</emphasis></entry>
                        <entry>数値表現に使用する文字の地域化した一覧を返します。</entry>
                    </row>
                    <row>
                        <entry><emphasis>NameToCurrency</emphasis></entry>
                        <entry>
                          地域化した通貨名の一覧を返します。
                          通貨がキー、そして通貨名の翻訳が値となります。
                          <link linkend="zend.currency.introduction">Zend_Currency</link>
                          を使用します。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>CurrencyToName</emphasis></entry>
                        <entry>
                          地域化した通貨名に対応する通貨の一覧を返します。
                          通貨名の翻訳がキー、そして通貨が値となります。
                          単純に行うには
                          <link linkend="zend.currency.introduction">Zend_Currency</link>
                          を使用します。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>CurrencySymbol</emphasis></entry>
                        <entry>
                          通貨に対応する地域化した通貨記号の一覧を返します。
                          通貨がキー、そして記号が値となります。
                          単純に行うには
                          <link linkend="zend.currency.introduction">Zend_Currency</link>
                          を使用します。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>Question</emphasis></entry>
                        <entry>
                          肯定 ('yes') および否定 ('no')
                          に対応する地域化した文字列の一覧を返します。
                          単純に行うには
                          <link linkend="zend.locale.getquestion">Zend_Locale の getQuestion メソッド</link>
                          を使用します。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>CurrencyFraction</emphasis></entry>
                        <entry>
                          通貨に対応する小数部の桁数を返します。
                          通貨がキー、そして小数部の桁数が値となります。
                          単純に行うには
                          <link linkend="zend.currency.introduction">Zend_Currency</link>
                          を使用します。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>CurrencyRounding</emphasis></entry>
                        <entry>
                          通貨に対応する丸め方式の一覧を返します。
                          通貨がキー、そして丸め方式が値となります。
                          単純に行うには
                          <link linkend="zend.currency.introduction">Zend_Currency</link>
                          を使用します。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>CurrencyToRegion</emphasis></entry>
                        <entry>
                          その地域で使用する通貨の一覧を返します。
                          <constant>ISO3166</constant> の値 ('region') が配列のキー、そして <constant>ISO4217</constant> の値
                          ('currency') が配列の値となります。
                          単純に行うには
                          <link linkend="zend.currency.introduction">Zend_Currency</link>
                          を使用します。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>RegionToCurrency</emphasis></entry>
                        <entry>
                          その通貨を使用している地域の一覧を返します。
                          <constant>ISO4217</constant> の値 ('currency') が配列のキー、そして
                          <constant>ISO3166</constant> の値 ('region') が配列の値となります。
                          通貨が複数の地域で使用されている場合は、
                          空白で区切った形式になります。
                          単純に行うには
                          <link linkend="zend.currency.introduction">Zend_Currency</link>
                          を使用します。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>RegionToTerritory</emphasis></entry>
                        <entry>
                          その国の領域一覧あるいはその領域に含まれるサブ領域の一覧を返します。
                          その通貨を使用している地域と領域の一覧を返します。
                          <acronym>ISO</acronym> の領域コード ('currency') が配列のキー、そして
                          <constant>ISO3166</constant> の値 ('region') が配列の値となります。
                          領域が複数の地域を含む場合は、
                          空白で区切った形式になります。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>TerritoryToRegion</emphasis></entry>
                        <entry>
                          地域とその地域が存在する領域の一覧を返します。
                          <constant>ISO3166</constant> のコード ('region') が配列のキー、
                          そして <acronym>ISO</acronym> の領域コード ('territory') が配列の値となります。
                          地域が複数の領域にまたがる場合は、
                          空白で区切った形式になります。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>ScriptToLanguage</emphasis></entry>
                        <entry>
                          その国で使用する文字の一覧を返します。
                          言語コードが配列のキー、そして文字コードが配列の値となります。
                          言語が複数の文字を含む場合は、
                          空白で区切った形式になります。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>LanguageToScript</emphasis></entry>
                        <entry>
                          ある文字を使用する言語の一覧を返します。
                          文字コードが配列のキー、そして言語コードが配列の値となります。
                          文字が複数の言語で用いられる場合は、
                          空白で区切った形式になります。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>TerritoryToLanguage</emphasis></entry>
                        <entry>
                          ある言語を使用する国の一覧を返します。
                          国コードが配列のキー、そして言語コードが配列の値となります。
                          言語が複数の国で用いられる場合は、
                          空白で区切った形式になります。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>LanguageToTerritory</emphasis></entry>
                        <entry>
                          国と、その国で話されている言語の一覧を返します。
                          国コードが配列のキー、そして言語コードが配列の値となります。
                          領域が複数の言語を使用する場合は、
                          空白で区切った形式になります。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>TimezoneToWindows</emphasis></entry>
                        <entry>
                          Windows のタイムゾーンと、関連する <acronym>ISO</acronym> タイムゾーンの一覧を返します。
                          Windows のタイムゾーンが配列のキー、
                          そして <acronym>ISO</acronym> タイムゾーンが配列の値となります。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>WindowsToTimezone</emphasis></entry>
                        <entry>
                          <acronym>ISO</acronym> タイムゾーンと、関連する Windows のタイムゾーンの一覧を返します。
                          <acronym>ISO</acronym> タイムゾーンが配列のキー、
                          そして Windows のタイムゾーンが配列の値となります。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>TerritoryToTimezone</emphasis></entry>
                        <entry>
                          地域あるいは領域と、関連する <acronym>ISO</acronym> タイムゾーンの一覧を返します。
                          <acronym>ISO</acronym> タイムゾーンが配列のキー、そして領域コードが配列の値となります。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>TimezoneToTerritory</emphasis></entry>
                        <entry>
                          タイムゾーンと、関連する地域あるいは領域コードの一覧を返します。
                          地域コードあるいは領域コードが配列のキー、
                          そして <acronym>ISO</acronym> タイムゾーンが配列の値となります。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>CityToTimezone</emphasis></entry>
                        <entry>
                          地域化した都市名の一覧を返します。
                          これを用いて、関連するタイムゾーンの翻訳を行います。
                          すべてのタイムゾーンが翻訳できるわけではありませんが、
                          ユーザにとっては <acronym>ISO</acronym> タイムゾーン名よりも
                          母国語で書かれた都市名のほうがわかりやすいでしょう。
                          <acronym>ISO</acronym> タイムゾーンが配列のキー、そして都市名の翻訳が配列の値となります。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>TimezoneToCity</emphasis></entry>
                        <entry>
                          地域化した都市名に対応するタイムゾーンの一覧を返します。
                          地域化した都市名が配列のキー、
                          そして <acronym>ISO</acronym> タイムゾーンが配列の値となります。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>PhoneToTerritory</emphasis></entry>
                        <entry>
                            領域内で使用されている電話コードの一覧を返します。
                            領域 (地域) が配列のキー、
                            そして電話コードが配列の値となります。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>TerritoryToPhone</emphasis></entry>
                        <entry>
                            電話コードが使用されている領域の一覧を返します。
                            電話コードが配列のキー、
                            そして領域 (地域) が配列の値となります。
                            ある電話コードが複数の領域で使用されている場合は、
                            空白で区切った形式になります。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>NumericToTerritory</emphasis></entry>
                        <entry>
                            領域内で使用されている 3 桁の数値コードの一覧を返します。
                            領域 (地域) が配列のキー、
                            そして 3 桁の数値コードが配列の値となります。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>TerritoryToNumeric</emphasis></entry>
                        <entry>
                            3 桁の数値コードに対応する領域の一覧を返します。
                            3 桁の数値コードが配列のキー、
                            そして領域 (地域) が配列の値となります。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>Alpha3ToTerritory</emphasis></entry>
                        <entry>
                            領域内で使用されている 3 桁の文字コードの一覧を返します。
                            領域 (地域) が配列のキー、
                            そして 3 桁の文字コードが配列の値となります。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>TerritoryToAlpha3</emphasis></entry>
                        <entry>
                            3 桁の文字コードに対応する領域の一覧を返します。
                            3 桁の文字コードが配列のキー、
                            そして領域 (地域) が配列の値となります。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>PostalToTerritory</emphasis></entry>
                        <entry>
                            その郵便番号が使われている領域の一覧を正規表現で返します。
                            <acronym>ISO</acronym> 領域コード ('territory') が配列のキー、
                            そして正規表現が配列の値となります。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>NumberingSystem</emphasis></entry>
                        <entry>
                            桁表記に使用する文字の一覧を返します。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>FallbackToChar</emphasis></entry>
                        <entry>
                            よく使われる unicode 文字の置換用文字の一覧を返します。
                            これを使用して、たとえば "©" を "(C)" に置換したりします。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>CharToFallback</emphasis></entry>
                        <entry>
                            よく使われる置換用文字に対応する unicode 文字の一覧を返します。
                            これを使用して、たとえば "(C)" を "©" に置換したりします。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>LocaleUpgrade</emphasis></entry>
                        <entry>
                            ロケールの依存性の一覧を返します。
                            これを使用して、言語を完全修飾形式のロケールに変換します。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>Unit</emphasis></entry>
                        <entry>
                            地域化したカレンダーの単位の一覧を帰します。
                            これを使用して、"day" や "month" などといった文字列を自動的に翻訳します。
                        </entry>
                    </row>
                </tbody>
            </tgroup>
        </table>

        <para>
            単一の翻訳データがほしい場合は、<methodname>getTranslation()</methodname> を使用します。
            この関数は常に文字列を返しますが、<methodname>getTranslationList()</methodname>
            メソッドよりも多くの型を使用できます。
            また、値についても一点を除いて同じです。
            取得したい値について、詳細を指定する必要があります。
        </para>

        <note>
            <para>
                ほとんどすべての場合について値を指定する必要があるので、
                このパラメータを最初に指定するようになっています。
                この点は <methodname>getTranslationList()</methodname> メソッドと異なります。
            </para>
        </note>

        <para>
            詳細な情報は、次の表を参照ください。
        </para>

        <table id="zend.locale.getdata.table-2">
            <title>getTranslation($value = null, $type = null, $locale = null) の詳細</title>
            <tgroup cols="2">
                <thead>
                    <row>
                        <entry>型</entry>
                        <entry>説明</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry><emphasis>Language</emphasis></entry>
                        <entry>
                          言語の翻訳を返します。
                          希望通りの翻訳を選択するために、言語コードを値として指定する必要があります。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>Script</emphasis></entry>
                        <entry>
                          文字の翻訳を返します。
                          希望通りの翻訳を選択するために、文字コードを値として指定する必要があります。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>Territory</emphasis> あるいは
                            <emphasis>Country</emphasis></entry>
                        <entry>
                          領域の翻訳を返します。
                          これは国、大陸および領域のいずれかとなります。
                          希望通りの翻訳を選択するために、領域コードを値として指定する必要があります。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>Variant</emphasis></entry>
                        <entry>
                          文字の変化形の翻訳を返します。
                          希望通りの翻訳を選択するために、変化形コードを値として指定する必要があります。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>Key</emphasis></entry>
                        <entry>
                          既知のキーの翻訳を返します。
                          このキーは、翻訳で使用する一般的な値です。
                          通常はカレンダーや文字照合、通貨などです。
                          希望通りのキーを選択するために、キーコードを値として指定する必要があります。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>DefaultCalendar</emphasis></entry>
                        <entry>
                          指定したロケールにおけるデフォルトの暦を返します。
                          ほとんどのロケールでは、これは 'gregorian' (グレゴリオ暦) となります。
                          単純に行うには
                          <link linkend="zend.date.introduction">Zend_Date</link>
                          を使用します。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>MonthContext</emphasis></entry>
                        <entry>
                          指定した暦で用いる月のデフォルトコンテキストを返します。
                          値を省略した場合はグレゴリオ暦を使用します。
                          単純に行うには
                          <link linkend="zend.date.introduction">Zend_Date</link>
                          を使用します。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>DefaultMonth</emphasis></entry>
                        <entry>
                          指定した暦で用いる月のデフォルトフォーマットを返します。
                          値を省略した場合はグレゴリオ暦を使用します。
                          単純に行うには
                          <link linkend="zend.date.introduction">Zend_Date</link>
                          を使用します。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>Month</emphasis></entry>
                        <entry>
                          月の翻訳を返します。
                          月を表す数値を値として指定する必要があります。
                          これは 1 から 12 までの数値となります。
                          他の暦、コンテキスト、フォーマットのデータを取得したい場合は、
                          値として整数値ではなく配列を指定します。
                          この配列の形式は
                          <code>array(
                            'calendar', 'context', 'format', 'month number')</code>
                          となります。整数値のみを指定した場合のデフォルトは、
                          暦が 'gregorian'、コンテキストが 'format'
                          そしてフォーマットが 'wide' となります。
                          単純に行うには
                          <link linkend="zend.date.introduction">Zend_Date</link>
                          を使用します。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>DayContext</emphasis></entry>
                        <entry>
                          指定した暦で用いる日のデフォルトコンテキストを返します。
                          値を省略した場合はグレゴリオ暦を使用します。
                          単純に行うには
                          <link linkend="zend.date.introduction">Zend_Date</link>
                          を使用します。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>DefaultDay</emphasis></entry>
                        <entry>
                          指定した暦で用いる曜日のデフォルトフォーマットを返します。
                          値を省略した場合はグレゴリオ暦を使用します。
                          単純に行うには
                          <link linkend="zend.date.introduction">Zend_Date</link>
                          を使用します。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>Day</emphasis></entry>
                        <entry>
                          曜日の翻訳を返します。
                          英語での曜日の省略名 ('sun', 'mon', など)
                          を値として指定する必要があります。
                          他の暦、コンテキスト、フォーマットのデータを取得したい場合は、
                          値として文字列ではなく配列を指定します。
                          この配列の形式は
                          <code>array('calendar', 'context', 'format', 'day abbreviation')</code>
                          となります。文字列のみを指定した場合のデフォルトは、
                          暦が 'gregorian'、コンテキストが 'format'
                          そしてフォーマットが 'wide' となります。
                          単純に行うには
                          <link linkend="zend.date.introduction">Zend_Date</link>
                          を使用します。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>Quarter</emphasis></entry>
                        <entry>
                          四半期の翻訳を返します。
                          四半期を表す数値を値として指定する必要があります。
                          これは 1 から 4 までの数値となります。
                          他の暦、コンテキスト、フォーマットのデータを取得したい場合は、
                          値として数値ではなく配列を指定します。
                          この配列の形式は
                          <code>array('calendar', 'context', 'format', 'quarter number')</code>
                          となります。文字列のみを指定した場合のデフォルトは、
                          暦が 'gregorian'、コンテキストが 'format'
                          そしてフォーマットが 'wide' となります。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>Am</emphasis></entry>
                        <entry>
                          そのロケールにおける 'AM' の翻訳を返します。
                          他の暦の値を取得したい場合は、その暦を文字列で指定します。
                          値を省略した場合はグレゴリオ暦を使用します。
                          単純に行うには
                          <link linkend="zend.date.introduction">Zend_Date</link>
                          を使用します。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>Pm</emphasis></entry>
                        <entry>
                          そのロケールにおける 'PM' の翻訳を返します。
                          他の暦の値を取得したい場合は、その暦を文字列で指定します。
                          値を省略した場合はグレゴリオ暦を使用します。
                          単純に行うには
                          <link linkend="zend.date.introduction">Zend_Date</link>
                          を使用します。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>Era</emphasis></entry>
                        <entry>
                          そのロケールにおける紀元の翻訳を返します。
                          紀元番号を文字列あるいは整数値で指定します。
                          他の暦やフォーマットの値を取得したい場合は、
                          値として数値ではなく配列を指定します。
                          この配列の形式は
                          <code>array('calendar', 'format', 'era number')</code>
                          となります。文字列のみを指定した場合のデフォルトは、
                          暦が 'gregorian'、コンテキストが 'format'
                          そしてフォーマットが 'wide' となります。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>DefaultDate</emphasis></entry>
                        <entry>
                          指定した暦で用いる日のデフォルトフォーマットを返します。
                          値を省略した場合はグレゴリオ暦を使用します。
                          単純に行うには
                          <link linkend="zend.date.introduction">Zend_Date</link>
                          を使用します。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>Date</emphasis></entry>
                        <entry>
                          そのロケールにおける、指定した暦あるいはフォーマットでの日のフォーマットを返します。
                          値を省略した場合は、暦が 'gregorian'、フォーマットが
                          'medium' となります。
                          文字列を指定した場合は、暦が 'gregorian'
                          でフォーマットが指定したものとなります。
                          <code>array('calendar', 'format')</code>
                          のような配列を指定することもできます。
                          単純に行うには
                          <link linkend="zend.date.introduction">Zend_Date</link>
                          を使用します。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>DefaultTime</emphasis></entry>
                        <entry>
                          指定した暦で用いる時刻のデフォルトフォーマットを返します。
                          値を省略した場合はグレゴリオ暦を使用します。
                          単純に行うには
                          <link linkend="zend.date.introduction">Zend_Date</link>
                          を使用します。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>Time</emphasis></entry>
                        <entry>
                          そのロケールにおける、指定した暦あるいはフォーマットでの時刻のフォーマットを返します。
                          値を省略した場合は、暦が 'gregorian'、フォーマットが
                          'medium' となります。
                          文字列を指定した場合は、暦が 'gregorian'
                          でフォーマットが指定したものとなります。
                          <code>array('calendar', 'format')</code>
                          のような配列を指定することもできます。
                          単純に行うには
                          <link linkend="zend.date.introduction">Zend_Date</link>
                          を使用します。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>DateTime</emphasis></entry>
                        <entry>
                          そのロケールにおける日付、時刻のフォーマットを返します。
                          これは、指定した暦において日付と時刻を表示する方法を示すものです。
                          値を省略した場合はグレゴリオ暦を使用します。
                          単純に行うには
                          <link linkend="zend.date.introduction">Zend_Date</link>
                          を使用します。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>DateItem</emphasis></entry>
                        <entry>指定した日付項目あるいは時刻項目に関するデフォルトフォーマットを返します。</entry>
                    </row>
                    <row>
                        <entry><emphasis>DateInterval</emphasis></entry>
                        <entry>
                            指定した日付・時刻フォーマットの間隔フォーマットを返します。
                            最初の値は暦のフォーマットで、通常は 'gregorian' となります。
                            二番目の値は間隔フォーマットで、
                            三番目の値は最大の差のトークンです。
                            たとえば、array('gregorian', 'yMMMM', 'y') は間隔フォーマット
                            'yMMMM' で、最大の差は 'y' となります。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>Field</emphasis></entry>
                        <entry>
                          日付フィールドの翻訳を返します。
                          これは、カレンダーや日付で 'month' や 'year'
                          といった文字列を各国語で表示する際に使用します。
                          返したいフィールドを文字列で指定する必要があります。
                          この場合はグレゴリオ暦を使用します。
                          他の暦におけるフィールドを取得するには、
                          <code>array('calendar', 'date field')</code>
                          のような配列を指定します。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>Relative</emphasis></entry>
                        <entry>
                          相対日付の翻訳を返します。
                          'yesterday' や 'tomorrow'
                          といった文字列を各国語で表示する際に使用します。
                          返したい日付を表す数値 (明日を基準とした相対値) を指定する必要があります。
                          昨日はら '-1'、明日なら '1' といったようになります。
                          この場合はグレゴリオ暦を使用します。
                          他の暦における相対日を取得するには、
                          <code>array('calendar', 'relative days')</code>
                          のような配列を指定します。
                          単純に行うには
                          <link linkend="zend.date.introduction">Zend_Date</link>
                          を使用します。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>DecimalNumber</emphasis></entry>
                        <entry>
                          指定したロケールにおける十進数値のフォーマットを返します。
                          単純に行うには
                          <link linkend="zend.locale.parsing">Zend_Locale_Format</link>
                          を使用します。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>ScientificNumber</emphasis></entry>
                        <entry>指定したロケールにおける科学記法の数値フォーマットを返します。</entry>
                    </row>
                    <row>
                        <entry><emphasis>PercentNumber</emphasis></entry>
                        <entry>指定したロケールにおけるパーセンテージの数値フォーマットを返します。</entry>
                    </row>
                    <row>
                        <entry><emphasis>CurrencyNumber</emphasis></entry>
                        <entry>
                          指定したロケールにおける通貨の数値フォーマットを返します。
                          単純に行うには
                          <link linkend="zend.currency.introduction">Zend_Currency</link>
                          を使用します。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>NameToCurrency</emphasis></entry>
                        <entry>
                          指定した通貨の翻訳を返します。
                          通貨は <acronym>ISO</acronym> フォーマットで指定する必要があります。
                          たとえば、通貨 'euro' を表すには 'EUR' と指定します。
                          単純に行うには
                          <link linkend="zend.currency.introduction">Zend_Currency</link>
                          を使用します。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>CurrencyToName</emphasis></entry>
                        <entry>
                          指定した地域化名に対応する通貨を返します。
                          単純に行うには
                          <link linkend="zend.currency.introduction">Zend_Currency</link>
                          を使用します。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>CurrencySymbol</emphasis></entry>
                        <entry>
                          指定したロケールにおいて使用する通貨記号を返します。
                          すべての通貨に記号が存在するわけではありません。
                          単純に行うには
                          <link linkend="zend.currency.introduction">Zend_Currency</link>
                          を使用します。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>Question</emphasis></entry>
                        <entry>
                          肯定 ('yes') および否定 ('no')
                          に対応する地域化した文字列を返します。
                          'yes' あるいは 'no' を値として指定すると、対応する文字列を取得できます。
                          単純に行うには
                          <link linkend="zend.locale.getquestion">Zend_Locale の getQuestion メソッド</link>
                          を使用します。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>CurrencyFraction</emphasis></entry>
                        <entry>
                          指定した通貨で使用する小数点以下の桁数を返します。
                          通貨は <acronym>ISO</acronym> 形式で指定する必要があります。
                          単純に行うには
                          <link linkend="zend.currency.introduction">Zend_Currency</link>
                          を使用します。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>CurrencyRounding</emphasis></entry>
                        <entry>
                          指定した通貨の丸め方式を返します。
                          通貨は <acronym>ISO</acronym> 形式で指定する必要があります。
                          通貨を省略した場合は、デフォルトの丸め規則を返します。
                          単純に行うには
                          <link linkend="zend.currency.introduction">Zend_Currency</link>
                          を使用します。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>CurrencyToRegion</emphasis></entry>
                        <entry>
                          指定した地域の通貨を返します。
                          地域コードは <constant>ISO3166</constant> 形式で指定する必要があります。
                          たとえばオーストリアは 'AT' となります。
                          単純に行うには
                          <link linkend="zend.currency.introduction">Zend_Currency</link>
                          を使用します。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>RegionToCurrency</emphasis></entry>
                        <entry>
                          その通貨を使用している地域を返します。
                          通貨は <constant>ISO4217</constant> のコードで指定する必要があります。
                          たとえばユーロは 'EUR' となります。
                          その通貨が複数の地域で用いられている場合は、
                          空白で区切った形式になります。
                          単純に行うには
                          <link linkend="zend.currency.introduction">Zend_Currency</link>
                          を使用します。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>RegionToTerritory</emphasis></entry>
                        <entry>
                          指定した領域の地域を返します。
                          領域は <constant>ISO4217</constant> 形式の文字列で指定する必要があります。
                          たとえば '001' は世界を現します。
                          この領域内の地域が空白区切り形式となります。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>TerritoryToRegion</emphasis></entry>
                        <entry>
                          指定した地域が存在する領域を返します。
                          地域は <constant>ISO3166</constant> 形式の文字列で指定する必要があります。
                          たとえばオーストリアは 'AT' となります。
                          その地域が複数の領域にまたがる場合は、
                          空白で区切った形式になります。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>ScriptToLanguage</emphasis></entry>
                        <entry>
                          指定した言語で用いる文字を返します。
                          言語は <acronym>ISO</acronym> 言語コードで指定する必要があります。
                          たとえば英語は 'en' となります。
                          その言語で複数の文字が用いられる場合は、
                          空白で区切った形式になります。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>LanguageToScript</emphasis></entry>
                        <entry>
                          指定した文字が用いられている言語を返します。
                          文字は <acronym>ISO</acronym> 文字コードで指定する必要があります。
                          たとえばラテン文字は 'Latn' となります。
                          その文字が複数の言語で用いられている場合は、
                          空白で区切った形式になります。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>TerritoryToLanguage</emphasis></entry>
                        <entry>
                          指定した言語が用いられている領域を返します。
                          言語は <acronym>ISO</acronym> 言語コードで指定する必要があります。
                          たとえば英語は 'en' となります。
                          その言語が複数の領域で用いられる場合は、
                          空白で区切った形式になります。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>LanguageToTerritory</emphasis></entry>
                        <entry>
                          指定した領域で用いられている言語の一覧を返します。
                          領域は <constant>ISO3166</constant> 形式のコードで指定する必要があります。
                          たとえばイタリアは 'IT' となります。
                          その言語が複数の領域で用いられる場合は、
                          空白で区切った形式になります。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>TimezoneToWindows</emphasis></entry>
                        <entry>指定した Windows タイムゾーンに対応する <acronym>ISO</acronym> タイムゾーンを返します。</entry>
                    </row>
                    <row>
                        <entry><emphasis>WindowsToTimezone</emphasis></entry>
                        <entry>指定した <acronym>ISO</acronym> タイムゾーンに対応する Windows タイムゾーンを返します。</entry>
                    </row>
                    <row>
                        <entry><emphasis>TerritoryToTimezone</emphasis></entry>
                        <entry>指定した <acronym>ISO</acronym> タイムゾーンに対応する領域を返します。</entry>
                    </row>
                    <row>
                        <entry><emphasis>TimezoneToTerritory</emphasis></entry>
                        <entry>指定した領域に対応する <acronym>ISO</acronym> タイムゾーンを返します。</entry>
                    </row>
                    <row>
                        <entry><emphasis>CityToTimezone</emphasis></entry>
                        <entry>
                          指定した <acronym>ISO</acronym> タイムゾーンに対応する地域化した都市名を返します。
                          すべてのタイムゾーンが都市名に変換できるわけではありません。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>TimezoneToCity</emphasis></entry>
                        <entry>
                          指定した地域化都市名に対応する <acronym>ISO</acronym> タイムゾーンを返します。
                          すべての都市名がタイムゾーンに対応しているわけではありません。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>PhoneToTerritory</emphasis></entry>
                        <entry>
                            指定した領域 (地域) に対応する電話コードを返します。
                            領域コードは <constant>ISO3166</constant> 形式の文字列で指定する必要があります。
                            たとえばオーストリアは 'AT' となります。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>TerritoryToPhone</emphasis></entry>
                        <entry>
                            電話コードが使われている領域 (地域) を返します。
                            電話コードは整数値で指定する必要があります。
                            たとえば '43' は +43 を表します。
                            ひとつの電話コードが複数の領域 (地域) で使われている場合は、
                            空白で区切った形式になります。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>NumericToTerritory</emphasis></entry>
                        <entry>
                            指定した領域 (地域) に対応する 3 桁の数値コードを返します。
                            領域コードは <constant>ISO3166</constant> 形式の文字列で指定する必要があります。
                            たとえばオーストリアは 'AT' となります。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>TerritoryToNumeric</emphasis></entry>
                        <entry>
                            3 桁の数値コードに対応する領域 (地域) を返します。
                            3 桁の数値コードは整数値で指定する必要があります。
                            たとえば '43' のようになります。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>Alpha3ToTerritory</emphasis></entry>
                        <entry>
                            指定した領域 (地域) に対応する 3 桁の文字コードを返します。
                            領域コードは <constant>ISO3166</constant> 形式の文字列で指定する必要があります。
                            たとえばオーストリアは 'AT' となります。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>TerritoryToAlpha3</emphasis></entry>
                        <entry>3 桁の文字コードに対応する領域 (地域) を返します。</entry>
                    </row>
                    <row>
                        <entry><emphasis>PostalToTerritory</emphasis></entry>
                        <entry>
                            指定した領域に対応する郵便番号の正規表現を返します。
                            領域は <constant>ISO4217</constant> 形式の文字列で指定する必要があります。
                            たとえば世界全体は '001' となります。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>NumberingSystem</emphasis></entry>
                        <entry>
                            桁表記に使用する文字を返します。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>FallbackToChar</emphasis></entry>
                        <entry>
                            よく使われる unicode 文字の置換用文字を返します。
                            これを使用して、たとえば "©" を "(C)" に置換したりします。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>CharToFallback</emphasis></entry>
                        <entry>
                            よく使われる置換用文字に対応する unicode 文字を返します。
                            これを使用して、たとえば "(C)" を "©" に置換したりします。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>LocaleUpgrade</emphasis></entry>
                        <entry>
                            指定した言語に関するロケールの依存性を返します。
                            これを使用して、この言語を完全修飾形式のロケールに変換します。
                        </entry>
                    </row>
                    <row>
                        <entry><emphasis>Unit</emphasis></entry>
                        <entry>
                            地域化したカレンダーの単位を帰します。
                            これを使用して、"day" や "month" などといった文字列を自動的に翻訳します。
                            最初のパラメータには型を、そして次のパラメータには数を指定しなければなりません。
                        </entry>
                    </row>
                </tbody>
            </tgroup>
        </table>

        <note>
            <para>
                Zend Framework 1.5 では、いくつかの古い型の名前が変わりました。
                新しい型が追加されたこと、スペルが間違ったいたこと、
                そして使いやすさを考慮したことなどが理由です。
                変更内容は以下の表でご確認ください。
            </para>
        </note>

        <table id="zend.locale.getdata.table-3">
            <title>Zend Framework 1.0 と 1.5 の違い</title>
            <tgroup cols="2">
                <thead>
                    <row>
                        <entry>古い型</entry>
                        <entry>新しい型</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>Country</entry>
                        <entry>Territory (値 '2')</entry>
                    </row>
                    <row>
                        <entry>Calendar</entry>
                        <entry>Type (値 'calendar')</entry>
                    </row>
                    <row>
                        <entry>Month_Short</entry>
                        <entry>Month (値 array('gregorian', 'format', 'abbreviated')</entry>
                    </row>
                    <row>
                        <entry>Month_Narrow</entry>
                        <entry>Month (値 array('gregorian', 'stand-alone', 'narrow')</entry>
                    </row>
                    <row>
                        <entry>Month_Complete</entry>
                        <entry>Months</entry>
                    </row>
                    <row>
                        <entry>Day_Short</entry>
                        <entry>Day (値 array('gregorian', 'format', 'abbreviated')</entry>
                    </row>
                    <row>
                        <entry>Day_Narrow</entry>
                        <entry>Day (値 array('gregorian', 'stand-alone', 'narrow')</entry>
                    </row>
                    <row>
                        <entry>DateFormat</entry>
                        <entry>Date</entry>
                    </row>
                    <row>
                        <entry>TimeFormat</entry>
                        <entry>Time</entry>
                    </row>
                    <row>
                        <entry>Timezones</entry>
                        <entry>CityToTimezone</entry>
                    </row>
                    <row>
                        <entry>Currency</entry>
                        <entry>NameToCurrency</entry>
                    </row>
                    <row>
                        <entry>Currency_Sign</entry>
                        <entry>CurrencySymbol</entry>
                    </row>
                    <row>
                        <entry>Currency_Detail</entry>
                        <entry>CurrencyToRegion</entry>
                    </row>
                    <row>
                        <entry>Territory_Detail</entry>
                        <entry>TerritoryToRegion</entry>
                    </row>
                    <row>
                        <entry>Language_Detail</entry>
                        <entry>LanguageToTerritory</entry>
                    </row>
                </tbody>
            </tgroup>
        </table>

        <para>
            以下の例は、さまざまな言語でのものの名前を取得する方法を示すものです。
        </para>

        <example id="zend.locale.getdata.example-3">
            <title>getTranslationList</title>
            <programlisting language="php"><![CDATA[
// すべての国名をドイツ語で表示します
print_r(Zend_Locale::getTranslationList('country', 'de'));
]]></programlisting>
        </example>

        <para>
            次の例は、ある言語の名前を別の言語でどのようにいうのかを、
            二文字の <acronym>ISO</acronym> 国コードを知らない場合に調べるものです。
        </para>

        <example id="zend.locale.getdata.example-4">
            <title>国の名前を、ある言語から別の言語に変換する</title>
            <programlisting language="php"><![CDATA[
$code2name = Zend_Locale::getLanguageTranslationList('en_US');
$name2code = array_flip($code2name);
$frenchCode = $name2code['French'];
echo Zend_Locale::getLanguageTranslation($frenchCode, 'de_AT');
// 出力は、「フランス語」を表すドイツ語の名前になります
]]></programlisting>
        </example>

        <para>
            <classname>Zend_Locale</classname> で使用できるすべての言語の一覧を、それぞれの言語での表記で取得するには、
            以下の例をウェブページで使用してみましょう。
            同様に <methodname>getCountryTranslationList()</methodname> および
            <methodname>getCountryTranslation()</methodname> を使用すると、
            あなたのネイティブ言語での地域名と別の言語での地域名の対応表を作成できます。
            <code>try .. catch</code> ブロックで、
            存在しないロケールを使用した場合の例外を処理するようにしましょう。
            すべての言語がすべてのロケールに対応しているわけではありません。
            この例では、例外を無視することで、
            スクリプトが途中で終わってしまうことを防いでいます。
        </para>

        <example id="zend.locale.getdata.example-6">
            <title>すべての言語を、その国のネイティブ言語で書き出す</title>
            <programlisting language="php"><![CDATA[
$list = Zend_Locale::getLanguageTranslationList('auto');

foreach($list as $language => $content) {
    try {
        $output = Zend_Locale::getLanguageTranslation($language, $language);
        if (is_string($output)) {
            print "\n<br>[".$language."] ".$output;
        }
    } catch (Exception $e) {
        continue;
    }
}
]]></programlisting>
        </example>

    </sect2>

    <sect2 id="zend.locale.getquestion">

        <title>"yes" および "no" に対応する翻訳の取得</title>

        <para>
            プログラム上で、ユーザに "はい" あるいは "いいえ"
            で答えてもらうことがよくあります。
            <methodname>getQuestion()</methodname> を使用すると、
            ユーザに問い合わせるときに使用する単語あるいは正規表現文字列を含む配列を、
            特定の $locale (デフォルトは、そのオブジェクトのロケール)
            にあわせて返します。
            返される配列の中身は次のようになります。
        </para>

        <itemizedlist>
            <listitem>
                <para>
                    <emphasis>yes および no</emphasis>:
                    yes および no に対応する一般的な文字列表現です。
                    これは、yesarray および noarray の最初の要素でもあり、もっとも一般的な内容です。
                </para>

                <para>
                    <emphasis>yesarray および noarray</emphasis>:
                    yes および no に対応する内容をすべて含む配列です。
                    言語によっては単に「はい」「いいえ」以外の返答を持つものもあります。
                    一般に、これは完全な文字列とその省略形になります。
                </para>

                <para>
                    <emphasis>yesexpr および noexpr</emphasis>:
                    正規表現で、ユーザの回答から yes か no かを判定できるようにします。
                </para>
            </listitem>
        </itemizedlist>

        <para>
            これらのすべての情報は当然地域化されており、
            設定されているロケールによって変化します。
            以下の例で、どのような情報が取得できるのかを確認してみましょう。
        </para>

        <example id="zend.locale.getquestion.example-1">
            <title>getQuestion()</title>
            <programlisting language="php"><![CDATA[
$locale = new Zend_Locale();
// 設問の文字列
print_r($locale->getQuestion('de'));

- - - 出力 - - -

Array
(
    [yes] => ja
    [no] => nein
    [yesarray] => Array
        (
            [0] => ja
            [1] => j
        )

    [noarray] => Array
        (
            [0] => nein
            [1] => n
        )

    [yesexpr] => ^([jJ][aA]?)|([jJ]?)
    [noexpr] => ^([nN]([eE][iI][nN])?)|([nN]?)
)
]]></programlisting>
        </example>

        <note>
            <para>
                1.0.3 までは、<emphasis>yesabbr</emphasis>
                もロケールデータから取得可能でした。
                1.5 以降、この情報は単体では存在しません。しかし、同じ情報を
                <emphasis>yesarray</emphasis>
                から取得できます。
            </para>
        </note>
    </sect2>

    <sect2 id="zend.locale.getlocalelist">

        <title>既知のロケールの一覧の取得</title>

        <para>
            すべての既知のロケールの一覧を取得したいこともあるでしょう。
            たとえば、ロケール選択用の select 要素を作成する場合などに必要となるはずです。
            このようなときには、静的メソッド
            <methodname>getLocaleList()</methodname> を使用します。
            このメソッドは、すべての既知のロケールの一覧を返します。
        </para>

        <example id="zend.locale.getlocalelist.example-1">
            <title>getLocaleList()</title>
            <programlisting language="php"><![CDATA[
$localelist = Zend_Locale::getLocaleList();
]]></programlisting>
        </example>

        <note>
            <para>
                返された配列のキーがロケール名となっていることに注意しましょう。
                キーに対応する値は、常に <constant>TRUE</constant> です。
            </para>
        </note>
    </sect2>

    <sect2 id="zend.locale.detection">

        <title>ロケールの検出</title>

        <para>
            指定した入力がロケールかどうかを知りたい場合は、静的メソッド
            <methodname>isLocale()</methodname> を使用します。
            このメソッドの最初のパラメータとして、調べたい文字列を指定します。
        </para>

        <example id="zend.locale.detection.example-1">
            <title>シンプルなロケールの検出</title>
            <programlisting language="php"><![CDATA[
$input = 'to_RU';
if (Zend_Locale::isLocale($input)) {
    print "'{$input}' is a locale";
} else {
    print "Sorry... the given input is no locale";
}
]]></programlisting>
        </example>

        <para>
            ごらんのとおり、このメソッドの出力は常に boolean となります。
            このメソッドをコールして唯一例外が発生するのは、
            システム側でロケールを一切提供しておらず、Zend Framework
            がロケールを自動検出できなかった場合です。
            通常、このような場合は、ご利用の OS 上で <acronym>PHP</acronym> の
            <methodname>setlocale()</methodname> がうまく動作しないでしょう。
        </para>

        <para>
            指定したロケールに地域部が存在しない場合でも、
            自動的に地域部をはずして検出してくれることにもお気づきでしょう。
            先ほどの例では、言語 <code>'to'</code> は地域
            <code>'RU'</code> 内に存在しません。しかし、返される結果は <constant>TRUE</constant> となります。
            <classname>Zend_Locale</classname> は指定した入力を処理できるからです。
        </para>

        <para>
            しかし、この自動変換機能がじゃまになることもあるでしょう。そんな場合には
            <methodname>isLocale()</methodname> の 2 番目のパラメータを使用します。
            <code>strict</code> パラメータのデフォルトは
            <constant>FALSE</constant> で、自動変換を無効にするにはこれを <constant>TRUE</constant>
            とします。
        </para>

        <example id="zend.locale.detection.example-2">
            <title>厳格なロケール検出</title>
            <programlisting language="php"><![CDATA[
$input = 'to_RU';
if (Zend_Locale::isLocale($input, true)) {
    print "'{$input}' is a locale";
} else {
    print "Sorry... the given input is no locale";
}
]]></programlisting>
        </example>

        <para>
            これで指定した文字列がロケールかどうかを判別できるようになったので、
            自作のクラスでロケール対応の処理ができるようになりました。
            しかし、すでにお気づきかもしれませんが、毎回のように次のような
            15 行のコードを書かなければならないことになってしまいます。
        </para>

        <example id="zend.locale.detection.example-3">
            <title>ロケールに対応した振る舞いの実装</title>
            <programlisting language="php"><![CDATA[
if ($locale === null) {
    $locale = new Zend_Locale();
}

if (!Zend_Locale::isLocale($locale, true, false)) {
    if (!Zend_Locale::isLocale($locale, false, false)) {
        throw new Zend_Locale_Exception(
            "The locale '$locale' is no known locale");
    }

    $locale = new Zend_Locale($locale);
}

if ($locale instanceof Zend_Locale) {
    $locale = $locale->toString();
}
]]></programlisting>
        </example>

        <para>
            Zend Framework 1.8 で、静的メソッド <methodname>findLocale()</methodname>
            が追加されました。これは、現在使用中のロケール文字列を返します。
            このメソッドは、次のような処理を行います。
        </para>

        <itemizedlist>
            <listitem>
                <para>
                    指定した文字列がロケールかどうかを調べる
                </para>
            </listitem>
            <listitem>
                <para>
                    指定した地域にロケールが存在しない場合は地域部をはずす
                </para>
            </listitem>

            <!-- TODO : to be translated -->
            <listitem>
                <para>
                    Upgrades the locale when it is detected as region without language
                </para>
            </listitem>

            <listitem>
                <para>
                    入力を省略した場合は、それまでにアプリケーションで設定されていたロケールを返す
                </para>
            </listitem>
            <listitem>
                <para>
                    ここまでの検出に失敗した場合はブラウザのロケールを検出する
                </para>
            </listitem>
            <listitem>
                <para>
                    ここまでの検出に失敗した場合は環境変数のロケールを検出する
                </para>
            </listitem>
            <listitem>
                <para>
                    ここまでの検出に失敗した場合はフレームワークのロケールを検出する
                </para>
            </listitem>
            <listitem>
                <para>
                    常に、見つかったロケールを表す文字列を返す
                </para>
            </listitem>
        </itemizedlist>

        <para>
            次の例は、さきほどのコードをたったひとつのメソッドコールで置き換えるものです。
        </para>

        <example id="zend.locale.detection.example-4">
            <title>Zend Framework 1.8 以降でのロケール対応の振る舞いの実装</title>
            <programlisting language="php"><![CDATA[
$locale = Zend_Locale::findLocale($inputstring);
]]></programlisting>
        </example>
    </sect2>
</sect1>
<!--
vim:se ts=4 sw=4 et:
-->
