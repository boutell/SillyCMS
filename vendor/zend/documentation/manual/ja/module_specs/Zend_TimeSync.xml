<?xml version="1.0" encoding="UTF-8"?>
<!-- Reviewed: no -->
<!-- EN-Revision: 20807 -->
<sect1 id="zend.timesync.introduction">

    <title>導入</title>

    <para>
        <classname>Zend_TimeSync</classname> は、インターネット時刻
        あるいはネットワーク時刻をタイムサーバから取得するものです。
        プロトコルとして <emphasis>NTP</emphasis>
        あるいは <emphasis>SNTP</emphasis> を使用します。
        <classname>Zend_TimeSync</classname> を使用すれば、
        Zend Framework が稼動しているサーバの時刻設定を気にせずに動作させられるようになります。
    </para>

    <para>
        サーバの実際の時刻とは独立した立場でいるために、
        <classname>Zend_TimeSync</classname> は内部的に
        NTP や SNTP 経由の実際の時刻とサーバの時刻との差を考慮して動作します。
    </para>

    <note>

        <title>背景</title>

        <para>
            <classname>Zend_TimeSync</classname> はサーバの時刻を変更することはできません。
            しかし、実際の時刻とサーバの時刻との差を表す
            <link linkend="zend.date.introduction">Zend_Date</link> のインスタンスを返します。
        </para>

    </note>

    <sect2 id="zend.timesync.introduction.why">

        <title>なぜ Zend_TimeSync ?</title>

        <para>
            いったいなぜ <classname>Zend_TimeSync</classname> を使うのでしょう?
        </para>

        <para>
            複数のサーバで運用されている環境では、通常はタイムサーバを用いて
            各サーバの時刻を同期させていることでしょう。
            そのようなごく普通の環境なら、必ずしも
            <classname>Zend_TimeSync</classname> を使う必要はありません。
            しかし、タイムサーバを使用できない環境であったり
            そのようなサービスを実行する権限がなかったりする場合などには便利です。
        </para>

        <para>
            <classname>Zend_TimeSync</classname> の使用に適した例をいくつかあげてみます。
        </para>

        <itemizedlist mark='opencircle'>
            <listitem>
                <para>
                    <emphasis>タイムサービスのないサーバ</emphasis>
                </para>
                <para>
                    アプリケーションを動作させているサーバ上でタイムサービスが稼動していない場合は、
                    アプリケーション内で <classname>Zend_TimeSync</classname> を実装するとよいでしょう。
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis>独立したデータベースサーバ</emphasis>
                </para>
                <para>
                    データベースが別のサーバ上で動作しており、
                    そのサーバとアプリケーションサーバが
                    <emphasis>NTP</emphasis> や <emphasis>SNTP</emphasis>
                    で接続されていない場合、
                    データベースにタイムスタンプを格納しようとすると問題が発生する可能性があります。
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis>複数サーバ環境</emphasis>
                </para>
                <para>
                    アプリケーションが複数サーバ環境で動作しており、
                    サーバ間の時刻が同期していない場合、
                    あるサーバで実行したアプリケーションと
                    別のサーバで実行したアプリケーションの間で問題が発生する可能性があります。
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis>バッチ処理</emphasis>
                </para>
                <para>
                    バッチファイルやコマンドラインアプリケーションで
                    タイムサービスを使用したい場合、<classname>Zend_TimeSync</classname> が使えるでしょう。
                </para>
            </listitem>
        </itemizedlist>

        <para>
            これらのすべての場合について <classname>Zend_TimeSync</classname> は最適なソリューションであり、
            サーバ上で何らかのサービスを実行することができない場合にも使用できます。
        </para>

    </sect2>

    <sect2 id="zend.timesync.introduction.ntp">

        <title>NTP とは?</title>

        <para>
            Network Time Protocol (<emphasis>NTP</emphasis>)
            は、ネットワーク上のパケット交換によってコンピュータシステムの時刻を同期させるプロトコルです。
            NTP は UDP ポート 123 を使用します。このプロトコルについての詳細は
            <ulink url="http://en.wikipedia.org/wiki/Network_Time_Protocol">wikipedia の記事</ulink>
            (<ulink url="http://ja.wikipedia.org/wiki/Network_Time_Protocol">日本語</ulink>)
            を参照ください。
        </para>

    </sect2>

    <sect2 id="zend.timesync.introduction.sntp">

        <title>SNTP とは?</title>

        <para>
            Simple Network Time Protocol (<emphasis>SNTP</emphasis>)
            は、ネットワーク上のパケット交換によってコンピュータシステムの時刻を同期させるプロトコルです。
            SNTP は UDP ポート 37 を使用します。<code>NTP</code>
            プロトコルに似ていますが、よりシンプルです。
        </para>

    </sect2>

    <sect2 id="zend.timesync.introduction.problematic">

        <title>問題のある使用法</title>

        <para>
            <classname>Zend_TimeSync</classname> を使用する際は、
            時刻同期の仕組みやウェブ自体の仕組みを考慮するようにしましょう。
            問題を回避する方法についてここで説明するので、
            <classname>Zend_TimeSync</classname>
            を使う前に熟読しておきましょう。
        </para>

    </sect2>

    <sect2 id="zend.timesync.introduction.decision">

        <title>どのサーバを使用するか</title>

        <para>
            どのタイムサーバを使用するかは注意して決めなければいけません。
            これには、次のような理由があります。
        </para>

        <itemizedlist mark='opencircle'>
            <listitem>
                <para>
                    距離
                </para>
                <para>
                    アプリケーションが稼動しているサーバと
                    使用するタイムサーバの距離です。
                    ヨーロッパにあるサーバで動作させているのにタヒチのタイムサーバを使用するなんて意味がありません。
                    常に近場のサーバを選択するようにしましょう。
                    これにより、リクエストの時間とネットワーク負荷を軽減させることができます。
                </para>
            </listitem>
            <listitem>
                <para>
                    速度
                </para>
                <para>
                    リクエストが処理されるまでの所要時間も重要です。
                    いくつかのサーバを試し、いちばんよい結果を得られるサーバを見つけましょう。
                    到達できない場所にあるサーバにリクエストを送ったりしたら、
                    無駄に時間をロスしてしまうことになります。
                </para>
            </listitem>
            <listitem>
                <para>
                    負荷分散
                </para>
                <para>
                    同じサーバを使い続けないようにしましょう。
                    あまり頻繁に使用し続けると、タイムサーバからリクエストを遮断されてしまうことがあります。
                    ひとつのアプリケーションでタイムサーバを頻繁に使用するのなら、
                    ひとつのタイムサーバだけを使うのではなく
                    後で説明するような (プールを使用する) 方法を使用しましょう。
                </para>
            </listitem>
        </itemizedlist>

        <para>
            どうやってタイムサーバを見つけたらいいのでしょう?
            一般には、どのタイムサーバでも使用できます。
            LAN 内にあるものであってもかまいませんし、
            公開されているタイムサーバを使用してもかまいません。
            公開されているタイムサーバを使用する場合は、サーバプールを使用しましょう。
            サーバプールは、公開されているタイムサーバのアドレスをまとめたもので、
            そこにリクエストを送るとプール内のアドレスをランダムに取得できます。
            これを使用すれば、リクエストを分散させることができます。
            公開サーバプールは各地域ごとに用意されているので、
            上に挙げたようなような問題が発生することもありません。
        </para>

        <para>
            まずは <ulink url="http://www.pool.ntp.org">pool.ntp.org</ulink>
            で一番近いサーバプールを見つけましょう。たとえばサーバがドイツ国内にあるのなら
            <emphasis>0.europe.pool.ntp.org</emphasis>
            を使用することになるでしょう。
        </para>

    </sect2>

</sect1>
