<?xml version="1.0" encoding="UTF-8"?>
<!-- Reviewed: no -->
<!-- EN-Revision: 20876 -->
<sect1 id="migration.16">
    <title>Zend Framework 1.6</title>

    <para>
        以前のバージョンから Zend Framework 1.6 またはそれ以降に更新する際は、
        下記の移行上の注意点に注意すべきです。
    </para>

    <sect2 id="migration.16.zend.controller">
        <title>Zend_Controller</title>

        <sect3 id="migration.16.zend.controller.dispatcher">
            <title>ディスパッチャインターフェイスの変更</title>

            <para>
                <classname>Zend_Controller_Front</classname> と
                <classname>Zend_Controller_Router_Route_Module</classname>
                は、ディスパッチャインターフェイスにないメソッドを使用していました。
                次の 3 つのメソッドを追加し、
                自作のディスパッチャが同梱の実装と共存できるようにしています。
            </para>

            <itemizedlist>
                <listitem><para>
                    <methodname>getDefaultModule()</methodname>:
                    デフォルトモジュールの名前を返します。
                </para></listitem>

                <listitem><para>
                    <methodname>getDefaultControllerName()</methodname>:
                    デフォルトコントローラの名前を返します。
                </para></listitem>

                <listitem><para>
                    <methodname>getDefaultAction()</methodname>:
                    デフォルトアクションの名前を返します。
                </para></listitem>
            </itemizedlist>
        </sect3>
    </sect2>

    <sect2 id="migration.16.zend.file.transfer">
        <title>Zend_File_Transfer</title>
        <sect3 id="migration.16.zend.file.transfer.validators">
            <title>バリデータを使う際の変更点</title>

            <para>
                <classname>Zend_File_Transfer</classname> のバリデータが
                <classname>Zend_Form</classname> のデフォルトのものと同じようには動作しないという指摘がありました。
                <classname>Zend_Form</classname> では <varname>$breakChainOnFailure</varname>
                パラメータを利用でき、検証エラーが発生した際に
                それ以降のバリデータを動作させないようにすることができます。
            </para>

            <para>
                そこで、<classname>Zend_File_Transfer</classname>
                の既存のバリデータにもこのパラメータを追加することにしました。
            </para>

            <itemizedlist>
                <listitem><para>
                    古い形式の <acronym>API</acronym>: <methodname>addValidator($validator, $options, $files)</methodname>.
                </para></listitem>

                <listitem><para>
                    新しい形式の <acronym>API</acronym>: <methodname>addValidator($validator, $breakChainOnFailure, $options, $files)</methodname>.
                </para></listitem>
            </itemizedlist>

            <para>
                既存のスクリプトを新しい <acronym>API</acronym> に移行するには、バリデータの定義の後に
                <constant>FALSE</constant> を追加します。
            </para>

            <example id="migration.16.zend.file.transfer.example">
                <title>ファイルバリデータを 1.6.1 から 1.6.2 に移行する方法</title>

                <programlisting language="php"><![CDATA[
// 1.6.1 での例
$upload = new Zend_File_Transfer_Adapter_Http();
$upload->addValidator('FilesSize', array('1B', '100kB'));

// 同じ例を 1.6.2 以降用にしたもの
// boolean false が追加されていることに注意しましょう
$upload = new Zend_File_Transfer_Adapter_Http();
$upload->addValidator('FilesSize', false, array('1B', '100kB'));
]]></programlisting>
        </example>
        </sect3>
    </sect2>
</sect1>
<!--
vim:se ts=4 sw=4 et:
-->