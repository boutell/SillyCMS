<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: 19436 -->
<!-- Reviewed: no -->
<sect3 id="zend.view.helpers.initial.action">
    <title>Action View Helfer</title>

    <para>
        Der <classname>Action</classname> View Helfer ermöglicht es View Skripten eine gegebene
        Controller Aktion auszuführen; das Ergebnis des Antwortsobjektes das der Ausführung folgt
        wird dann zurückgegeben. Dieses kann verwendet werden wenn eine bestimmte Aktion
        wiederverwendbare Inhalte oder "helfende" Inhalte erstellt.
    </para>

    <para>
        Aktionen die zu einem <methodname>_forward()</methodname> oder einer Umleitung führen werden
        als ungültig angenommen, und als leerer String zurückgegeben.
    </para>

    <para>
        Die <acronym>API</acronym> für den <classname>Action</classname> View Helfer folgt dem der
        meisten <acronym>MVC</acronym> Komponenten die Controller Aktionen aufrufen:
        <command>action($action, $controller, $module = null, array $params =
            array())</command>. <varname>$action</varname> und <varname>$controller</varname>
        werden benötigt; wenn kein Modul angegeben wird, dann wird das Standardmodul angenommen.
    </para>

    <example id="zend.view.helpers.initial.action.usage">
        <title>Grundsätzliche Verwendung von Action View Helfern</title>

        <para>
            Als Beispiel, könnte man einen <classname>CommentController</classname> mit einer
            <methodname>listAction()</methodname> Methode haben die man in Reihenfolge ausführen
            will, um eine Liste von Kommentaren für die aktuelle Anfrage herauszuholen:
        </para>

        <programlisting language="php"><![CDATA[
<div id="sidebar right">
    <div class="item">
        <?php echo $this->action('list',
                                 'comment',
                                 null,
                                 array('count' => 10)); ?>
    </div>
</div>
]]></programlisting>
    </example>
</sect3>
<!--
vim:se ts=4 sw=4 et:
-->
