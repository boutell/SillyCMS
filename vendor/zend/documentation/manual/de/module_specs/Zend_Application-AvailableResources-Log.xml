<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: 19689 -->
<!-- Reviewed: no -->
<sect2 id="zend.application.available-resources.log">
    <title>Zend_Application_Resource_Log</title>

    <para>
        <classname>Zend_Application_Resource_Log</classname> instanziert eine Instanz von
        <classname>Zend_Log</classname> mit einer beliebigen Anzahl an Log Writern. Die
        Konfiguration wird der <methodname>Zend_Log::factory()</methodname> Methode 체bergeben, was
        es erlaubt Kombinationen von Log Writern und Filtern zu spezifizieren. Die Log Instanz kann
        sp채ter durch den Bootstrap empfangen werden um Events zu loggen.
    </para>

    <example id="zend.application.available-resources.log.configExample">
        <title>Beispiel Konfiguration einer Log Ressource</title>

        <para>
            Anbei ist ein Beispiel eines <acronym>INI</acronym> Abschnitts der zeigt wir die Log
            Ressource konfiguriert wird.
        </para>

        <programlisting language="ini"><![CDATA[
resources.log.stream.writerName = "Stream"
resources.log.stream.writerParams.stream = APPLICATION_PATH "/../data/logs/application.log"
resources.log.stream.writerParams.mode = "a"
resources.log.stream.filterName = "Priority"
resources.log.stream.filterParams.priority = 4
]]></programlisting>

        <para>
            F체r weitere Informationen 체ber vorhandene Optionen, siehe in die <link
                linkend="zend.log.factory">Dokumentation von Zend_Log::factory()</link>.
        </para>
    </example>
</sect2>
