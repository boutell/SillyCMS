<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: 21263 -->
<!-- Reviewed: no -->
<sect2 id="zend.validate.sitemap">
    <title>Sitemap Prüfungen</title>

    <para>
        Die folgenden Prüfungen entsprechen dem <ulink
            url="http://www.sitemaps.org/protocol.php">Sitemap <acronym>XML</acronym>
            Protokoll</ulink>.
    </para>

    <sect3 id="zend.validate.sitemap.changefreq">
        <title>Sitemap_Changefreq</title>

        <para>
            Prüft ob ein String gültig ist um Ihn als 'changefreq' Element in einem Sitemap
            <acronym>XML</acronym> Dokument zu verwenden. Gültige Elemente sind: 'always', 'hourly',
            'daily', 'weekly', 'monthly', 'yearly', oder 'never'.
        </para>

        <para>
            Gibt <constant>TRUE</constant> zurück wenn und nur wenn der Wert ein String ist und mit
            einer der oben spezifizierten Frequenzen übereinstimmt.
        </para>
    </sect3>

    <sect3 id="zend.validate.sitemap.lastmod">
        <title>Sitemap_Lastmod</title>

        <para>
            Prüft ob ein String gültig ist um Ihn als 'lastmod' Element in einem Sitemap
            <acronym>XML</acronym> Dokument zu verwenden. Das lastmod Element sollte einen
            <acronym>W3C</acronym> Datumsstring enthalten, und optional Informationen über die Zeit
            enthalten.
        </para>

        <para>
            Gibt <constant>TRUE</constant> zurück wenn, und nur wenn, der angegebene Wert ein String
            und in Bezug auf das Prokoll gültig ist.
        </para>

        <example id="zend.validate.sitemap.lastmod.example">
            <title>Sitemap Lastmod Prüfung</title>

            <programlisting language="php"><![CDATA[
$validator = new Zend_Validate_Sitemap_Lastmod();

$validator->isValid('1999-11-11T22:23:52-02:00'); // true
$validator->isValid('2008-05-12T00:42:52+02:00'); // true
$validator->isValid('1999-11-11'); // true
$validator->isValid('2008-05-12'); // true

$validator->isValid('1999-11-11t22:23:52-02:00'); // false
$validator->isValid('2008-05-12T00:42:60+02:00'); // false
$validator->isValid('1999-13-11'); // false
$validator->isValid('2008-05-32'); // false
$validator->isValid('yesterday'); // false
]]></programlisting>
        </example>
    </sect3>

    <sect3 id="zend.validate.sitemap.loc">
        <title>Sitemap_Loc</title>

        <para>
            Prüft ob ein String für die Verwendung als 'loc' Element in einem Sitemap
            <acronym>XML</acronym> Dokument gültig ist. Er verwendet intern
            <methodname>Zend_Form::check()</methodname>. Mehr darüber kann man unter <link
                linkend="zend.uri.validation">URI Prüfung</link> lesen.
        </para>
    </sect3>

    <sect3 id="zend.validate.sitemap.priority">
        <title>Sitemap_Priority</title>

        <para>
            Prüft ob ein Wert für die Verwendung als 'priority' Element in einem Sitemap
            <acronym>XML</acronym> Dokument gültig ist. Der Wert sollte ein Dezimalwert zwischen 0.0
            und 1.0 sein. Diese Prüfung akzeptiert sowohl nummerische Werte als auch Stringwerte.
        </para>

        <example id="zend.validate.sitemap.priority.example">
            <title>Sitemap Priority Prüfung</title>

            <programlisting language="php"><![CDATA[
$validator = new Zend_Validate_Sitemap_Priority();

$validator->isValid('0.1'); // true
$validator->isValid('0.789'); // true
$validator->isValid(0.8); // true
$validator->isValid(1.0); // true

$validator->isValid('1.1'); // false
$validator->isValid('-0.4'); // false
$validator->isValid(1.00001); // false
$validator->isValid(0xFF); // false
$validator->isValid('foo'); // false
]]></programlisting>
        </example>
    </sect3>

    <sect3 id="zend.validate.set.sitemap.options">
        <title>Unterstützte Optionen für Zend_Validate_Sitemap_*</title>

        <para>
            Es gibt keine unterstützten Optionen für irgendeine der Sitemap Prüfungen.
        </para>
    </sect3>
</sect2>
