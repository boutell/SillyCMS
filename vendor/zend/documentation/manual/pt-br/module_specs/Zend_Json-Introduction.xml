<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: 20792 -->
<!-- Reviewed: no -->
<sect1 id="zend.json.introduction">
    <title>Introdução</title>

    <para>
        <classname>Zend_Json</classname> provê métodos convenientes para serialização do
        <acronym>PHP</acronym> nativo para <acronym>JSON</acronym> e a descodificação
        <acronym>JSON</acronym> para <acronym>PHP</acronym> nativo. Para mais informações sobre
        <acronym>JSON</acronym>, <ulink url="http://www.json.org/">visite o site do projeto
        <acronym>JSON</acronym></ulink>.
    </para>

    <para>
        <acronym>JSON</acronym>, JavaScript Object Notation, pode ser usado para o intercâmbio de
        dados leves entre o JavaScript e outras linguagens. Desde que o <acronym>JSON</acronym>
        pode ser diretamente executado em JavaScript, é um formato mais leve e eficiente do que
        <acronym>XML</acronym> para troca de dados com clientes JavaScript.
    </para>

    <para>
        Além disso, <classname>Zend_Json</classname> fornece uma maneira útil de converter
        qualquer string arbitrária formatada em <acronym>XML</acronym> em uma string formatada em
        <acronym>JSON</acronym>. Este recurso interno permite que desenvolvedores
        <acronym>PHP</acronym> transformem os dados da empresa codificados em formato
        <acronym>XML</acronym> para o formato <acronym>JSON</acronym> antes de os enviar para
        aplicativos web baseados em Ajax. Ele fornece uma maneira fácil de fazer a conversão de
        dados dinâmicos no lado servidor, evitando assim análises desnecessárias do
        <acronym>XML</acronym> nos aplicativos do lado cliente. Ele oferece uma agradável e
        vantajosa função que resulta em mais dados específicos do aplicativo de
        processamento de dados.
    </para>
</sect1>
<!--
vim:se ts=4 sw=4 et:
-->
