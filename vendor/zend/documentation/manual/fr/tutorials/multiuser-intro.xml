<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: 20876 -->
<!-- Reviewed: no -->
<sect1 id="learning.multiuser.intro">
    <title>Fabrique une application Multi-Utilisateurs avec Zend Framework</title>

    <sect2 id="learning.multiuser.intro.zf">
        <title>Zend Framework</title>

        <para>
            Lorsque le web a été crée, il s'agissait d'un média permettant de consulter des
            documents statiques. La demande de contenu a cru, le nombre d'internautes aussi
            et les sites webs sont devenus des applications tournant sur de grosses plateformes.
        </para>

        <para>
            <acronym>HTTP</acronym> est le protocole du web: sans état, des requêtes/réponses
            à courte durée de vie. Ce protocole a été crée comme cela pour assurer le web
            tel qu'on l'entendait avant : servir du contenu statique et c'est ce design qui
            a fait du web un immense succès. C'est aussi ce design qui mène à des notions que
            les développeurs veulent utiliser dans leurs applications.
        </para>

        <para>
            Ces informations nous mènent à trois questions:
        </para>

        <itemizedlist>
            <listitem>
                <para>
                    Comment distinguer les clients d'une application?
                </para>
            </listitem>

            <listitem>
                <para>
                    Comment identifier ces clients?
                </para>
            </listitem>

            <listitem>
                <para>
                    Comment contrôler les droits d'un client identifié?
                </para>
            </listitem>
        </itemizedlist>

        <note>
            <title>Client contre Utilisateur</title>

            <para>
                Nous utilisons le terme "client" et pas utilisateur. Les applications web deviennent
                des fournisseurs de services. Ceci signifie que les "gens", les utilisateurs humains
                avec des navigateurs web ne sont pas les seuls à consommer l'application et ses services.
                Beaucoup d'autres applications web consomment elles-mêmes des ressources sur une
                application via des technologies comme <acronym>REST</acronym>, <acronym>SOAP</acronym>,
                ou <acronym>XML-RPC</acronym>. On voit bien qu'on ne peut parler d'utilisateur, nous
                traitons donc les utilisateurs humains des utilisateurs machines sous le même nom :
                des "clients" web.
            </para>

        </note>

        <para>
            Dans les chapitres qui suivent, nous nous attaquerons à ces problèmes que sont
            l'authentification, l'identification et les détails. Nous allons découvrir trois
            composants: <classname>Zend_Session</classname>, <classname>Zend_Auth</classname>, et
            <classname>Zend_Acl</classname>; nous montrerons des exemples concrets et des possibilités
            d'extension.
        </para>
    </sect2>
</sect1>