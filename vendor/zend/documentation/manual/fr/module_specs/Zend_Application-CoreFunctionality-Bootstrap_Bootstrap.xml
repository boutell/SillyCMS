<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: 19689 -->
<!-- Reviewed: no -->
<sect2 id="zend.application.core-functionality.bootstrap-bootstrap">
    <title>Zend_Application_Bootstrap_Bootstrap</title>

    <para>
        <classname>Zend_Application_Bootstrap_Bootstrap</classname> est une implémentation
        concrète de <link
            linkend="zend.application.core-functionality.bootstrap-bootstrapabstract">Zend_Application_Bootstrap_BootstrapAbstract</link>.
        Ces caractéristiques principales sont l'enregistrement de la <link
            linkend="zend.application.available-resources.frontcontroller">ressource Front
            Controller</link>, et la méthode <methodname>run()</methodname> qui vérifie d'abord
        la présence d'un module par défaut dans le contrôleur frontal, avant de lancer
        le dispatching.
    </para>

    <para>
        Dans la plupart des cas, vous étendrez cette classe dans vos bootstraps, ou encore
        vous utiliserez cette classe en lui fournissant une liste de plugins à utiliser.
    </para>

    <sect3 id="zend.application.core-functionality.bootstrap-bootstrap.autoloading">
        <title>Activer l'autoload de l'application</title>

        <para>
            De plus, cette implémentation de bootstrap fournit la possibilité de spécifier l'espace
            de noms ou le préfixe de classe pour les ressources situées dans son arborescence, ce
            qui va activer le chargement automatique des différentes resources de
            l'application&#160;; essentiellement, ceci instancie un objet <link
                linkend="zend.loader.autoloader-resource.module">Zend_Application_Module_Autoloader</link>,
            en fournissant l'espace de noms requêté et le dossier de bootstrap en tant qu'arguments.
            Vous pouvez activer cette fonctionnalité en fournissant l'espace de noms à l'option de
            configuration "appnamespace". Par exemple avec un fichier <acronym>INI</acronym>&#160;:
        </para>

        <programlisting language="ini"><![CDATA[
appnamespace = "Application"
]]></programlisting>

        <para>
            Ou en <acronym>XML</acronym>&#160;:
        </para>

        <programlisting language="xml"><![CDATA[
<appnamespace>Application</appnamespace>
]]></programlisting>

        <para>
            Par défaut, <classname>Zend_Tool</classname> va activer cette option avec la valeur
            "Application".
        </para>

        <para>
            Alternativement, vous pouvez simplement définir la propriété
            <varname>$_appNamespace</varname> de votre classe de bootstrap avec la valeur
            appropriée&#160;:
        </para>

        <programlisting language="php"><![CDATA[
class Bootstrap extends Zend_Application_Bootstrap_Bootstrap
{
    protected $_appNamespace = 'Application';
}
]]></programlisting>
    </sect3>
</sect2>
