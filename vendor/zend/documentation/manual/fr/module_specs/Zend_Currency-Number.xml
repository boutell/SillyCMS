<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: 21087 -->
<!-- Reviewed: no -->
<sect1 id="zend.currency.number">
    <title>A quoi ressemble une monnaie?</title>

    <para>
        Le rendu visuel d'une monnaie va dépendre de la locale. La locale stocke plusieurs informations
        qui peuvent chacune être redéfinies par vos propres options si besoin.
    </para>

    <para>
        Par exemple, la plupart des locales utilisent le script latin pour rendre les nombres.
        Mais certaines langues, comme l'arabe, utilisent d'autres chiffres. Et un site Web Arabe
        va utiliser le rendu arabe pour toutes les monnaies, voyez l'exemple:
    </para>

    <example id="zend.currency.number.example-1">
        <title>Utiliser un script personnalisé</title>

        <para>
            Imagnons que nous utisons la monnaie "Dollar". Mais nous voulons rendre notre page
            avec des scripts arabes.
        </para>

        <programlisting language="php"><![CDATA[
$currency = new Zend_Currency(
    array(
        'value'  => 1000,
        'script' => 'Arab',
    )
);

print $currency; // Retournerait '$ ١٬٠٠٠٫٠٠'
]]></programlisting>
    </example>

    <para>
        Pour plus d'informations sur les scripts disponibles, voyez le manuel de
        <classname>Zend_Locale</classname>sur <link linkend="zend.locale.numbersystems">les systèmes
        des nombres</link>.
    </para>

    <para>
        Le formattage d'une monnaie peut être changé. Par défaut, la locale est utilisée. Elle indique le séparateur
        des milliers, le point de la décimale et la précision.
    </para>

    <programlisting language="php"><![CDATA[
$currency = new Zend_Currency(
    array(
        'value'    => 1000,
        'currency' => 'USD'
        'format'   => 'de',
    )
);

print $currency; // Retournerait '$ 1.000'
]]></programlisting>

    <para>
        Il existe deux manières de préciser le format à utiliser, manuellement ou via une locale.
    </para>

    <para>
        Utiliser la locale vous permet de bénéficier de certains automatismes. Par exemple la locale
        'de' definit le point '.' comme séparateur des milliers, et la virgule ',' comme séparateur décimal.
        En anglais, c'est l'inverse.
    </para>

    <programlisting language="php"><![CDATA[
$currency_1 = new Zend_Currency(
    array(
        'value'    => 1000,
        'currency' => 'USD'
        'format'   => 'de',
    )
);

$currency_2 = new Zend_Currency(
    array(
        'value'    => 1000,
        'currency' => 'USD'
        'format'   => 'en',
    )
);

print $currency_1; // Retournerait '$ 1.000'
print $currency_2; // Retournerait '$ 1,000'
]]></programlisting>

    <para>
        Si vous les définissez manuellement, vous devez alors respecter le format décrit dans
        <link linkend="zend.locale.number.localize.table-1">ce chapitre de la localisation
            </link>. Voyez plutôt:
    </para>

    <programlisting language="php"><![CDATA[
$currency = new Zend_Currency(
    array(
        'value'    => 1000,
        'currency' => 'USD'
        'format'   => '#0',
    )
);

print $currency; // Retournerait '$ 1000'
]]></programlisting>

    <para>
        Dans l'exemple ci-dessus nous avons supprimé le séparateur et l'indicateur de précision.
    </para>
</sect1>
