<?xml version="1.0" encoding="UTF-8"?>
<!-- Reviewed: no -->
<sect1 id="zend.mail.file-transport">
    <title>Using File Transport</title>
    
    <para>
        <classname>Zend_Mail_Transport_File</classname> is useful in a
        development environment or for testing purposes. Instead of sending any real
        emails it simply dumps the email's body and headers to a file in the filesystem.
        Like the other transports it may be configured using
        <classname>Zend_Application_Resource_Mail</classname> or passed to the
        <methodname>send()</methodname> method of a <classname>Zend_Mail</classname> instance.
    </para>
    
    <para>
        The transport has two optional parameters that can be passed to the constructor or
        via <methodname>setOptions()</methodname> method. The <property>path</property>
        option specifies the base path where new files are saved. If nothing is set transport
        tries to get the default system directory for temporary files calling
        <methodname>sys_get_temp_dir</methodname>. The second parameter,
        <property>callback</property>, defines what function is used to generate a
        filename. As an example, assume we need to use recipient's email plus some
        hash as the filename:
    </para>

    <programlisting language="php"><![CDATA[
$mail = new Zend_Mail();
$mail->addTo('somebody@example.com', 'Some Recipient');
// build message...
$tr = new Zend_Mail_Transport_File(array('callback' => function ($transport){
    return $transport->recipients . '_' . mt_rand() . '.tmp';
}));
$mail->send($tr);
]]></programlisting>

    <para>
        The resulting file will be something like <filename>somebody@example.com_1493362665.tmp</filename>
    </para>
</sect1>