<?xml version="1.0" encoding="UTF-8"?>
<!-- Reviewed: no -->
<sect1 id="zend.tool.framework.system-providers">
    <title>Shipped System Providers</title>

    <para>
        In addition to the more useful project based providers that come shipped
        with <classname>Zend_Tool_Project</classname>, there are also some more basic, but
        interesting providers that come built into
        <classname>Zend_Tool_Framework</classname>. Some of these exist for the purpose
        of providing a means via the command line to extract information, such
        as the version, while others are intended to aid the developer when
        creating additional providers.
    </para>

    <sect2 id="zend.tool.framework.system-providers.version">
        <title>The Version Provider</title>

        <para>
            The Version provider is included so that you may determine which
            version of the framework that the <command>zf</command> or
            <classname>Zend_Tool</classname> is currently set to work with.
        </para>

        <para>
            Through the command line, simply run <command>zf show version</command>.
        </para>
    </sect2>

    <sect2 id="zend.tool.framework.system-providers.manifest">
        <title>The Manifest Provider</title>

        <para>
            The Manifest provider is included so that you may determine what
            kind of "manifest" information is available during the
            <classname>Zend_Tool</classname> runtime. Manifest data is information that
            is attached to specific objects during <classname>Zend_Tool</classname>'s
            runtime. Inside the manifest you will find the console specific
            namings that you are expected to use when calling certain commands.
            Data found in the manifest can be used by any provider or client on
            an as-needed basis.
        </para>

        <para>
            Through the command line, simply run <command>zf show manifest</command>.
        </para>
    </sect2>
</sect1>
