<?xml version="1.0" encoding="UTF-8"?>
<!-- Reviewed: no -->
<!-- EN-Revision: 21829 -->
<sect1 id="zend.tool.framework.clitool">
    <title>CLIツールの使用</title>

    <para>
        （内部的にコンソール・ツールとして知られる）<acronym>CLI</acronym>またはコマンドライン・ツールは、
        現在、<classname>Zend_Tool</classname>リクエストをディスパッチするための主要なインターフェースです。
        <acronym>CLI</acronym>ツールで、開発者は「コマンド・ライン・ウインドウ」内でツーリング・リクエストを出すことができます。
        それは、「ターミナルの」ウインドウとしても一般に知られています。
        この環境は、*nix環境で優れていますが、
        Windowsでの<filename>cmd.exe</filename>やconsole2、更にはCygwinプロジェクトとも共通の実装を持ちます。
    </para>

    <sect2 id="zend.tool.framework.clitool.setup-general">
        <title>CLIツールの設定</title>

        <para>
            コマンド・ライン・クライアントを通じてツーリング・リクエストを出すために、
            システムで「zf」命令を取り扱えるように、
            最初にクライアントを設定する必要があります。
            コマンド・ライン・クライアントは、どう見ても、
            ゼンド・フレームワーク・ディストリビューションを提供される<filename>.sh</filename>または<filename>.bat</filename>ファイルです。
            トランクでは、それはここで見つかります:
            <ulink url="http://framework.zend.com/svn/framework/standard/trunk/bin/">http://framework.zend.com/svn/framework/standard/trunk/bin/</ulink>
        </para>

        <para>
            ご覧の通り、3つのファイルが、<filename>bin/</filename>ディレクトリにあります:
            <filename>zf.php</filename>、<filename>zf.sh</filename>及び<filename>zf.bat</filename>。
            <filename>zf.sh</filename>および<filename>zf.bat</filename>は、オペレーティングシステム固有クライアント・ラッパです:
            *nix環境のための<filename>zf.sh</filename>とWin32環境のための<filename>zf.bat</filename>。
            これらのクライアント・ラッパは、適切な<filename>php.exe</filename>を捜し出して、<filename>zf.php</filename>を捜し出して、
            クライアント・リクエストに渡す役割を果たします。
            <filename>zf.php</filename>は、環境を理解し、適切なinclude_pathを構築して、
            ディスパッチするための適切なライブラリ・コンポーネントにコマンド・ラインで提供されるものを渡す
            取扱いに対して責任あるものです。
        </para>

        <para>
            最後に、あなたのオペレーティングシステムに関係なく、
            あなたはすべてを働かせる2つのものを確実にすることを望みます。
        </para>

        <orderedlist>
            <listitem>
                <para>
                    <filename>zf.sh/zf.bat</filename>は、システム・パスから到達できます。
                    カレント作業ディレクトリが何かに関係なく、
                    これはあなたのコマンド・ラインでどこからでも<filename>zf</filename>を呼ぶ能力です。
                </para>
            </listitem>

            <listitem>
                <para>
                    <filename>ZendFramework/library</filename>は<property>include_path</property>にあります。
                </para>
            </listitem>
        </orderedlist>

        <note>
            <para>
                上記が最も理想的な必要条件であるとはいえ、
                単にZend Frameworkをダウンロードして、
                <filename>./path/to/zf.php</filename>としていくらかのコマンドが動作することを期待できます。
            </para>
        </note>

    </sect2>

    <sect2 id="zend.tool.framework.clitool.setup-starnix">
        <title>Unixのようなシステム上でCLIツールを設定</title>

        <para>
            *nix環境で最も一般的な準備は、
            <acronym>PHP</acronym>バイナリと同じディレクトリに<filename>zf.sh</filename>と<filename>zf.php</filename>をコピーすることです。
            これは、通常、以下の場所のうちの1つで見つけられます:
        </para>

        <programlisting language="text"><![CDATA[
/usr/bin
/usr/local/bin
/usr/local/ZendServer/bin/
/Applications/ZendServer/bin/
]]></programlisting>

        <para>
            <acronym>PHP</acronym>バイナリの場所を見つけるために、
            コマンドラインで 'which php' を実行できます。
            これは、この環境で<acronym>PHP</acronym>スクリプトを実行するために存在する<acronym>PHP</acronym>バイナリの場所を返します。
        </para>

        <para>
            次の課題は、Zend Frameworkライブラリがシステム<acronym>PHP</acronym> <property>include_path</property>の中で
            正しく設定されることを確実にすることです。
            <code>include_path</code>が位置するところを見つけ出すために、
            <command>php -i</command> を実行したり、<property>include_path</property>変数を探したり、
            より簡潔に、 <command>php -i | grep include_path</command> を実行したりします。
            一旦<property>include_path</property>が位置するところ
            （これは通常、<filename>/usr/lib/php</filename> や <filename>/usr/share/php</filename>、<filename>/usr/local/lib/php</filename> または同様の何かです）
            を見つけたら、<filename>/library/</filename> ディレクトリの内容が
            <property>include_path</property>に指定されたディレクトリに置かれることを確実にしてください。
        </para>

        <para>
            一旦それらの2つのことをしたなら、
            コマンドを発行して、このような固有のレスポンスを戻すことができるはずです:
        </para>

        <para>
            <inlinegraphic scale="100" align="center" valign="middle"
                fileref="figures/zend.tool.framework.cliversionunix.png" format="PNG" />
        </para>

        <para>
            あなたがこの種の出力に遭遇しないならば、
            戻って、必要な部分の全てを固有の場所に持つことを確実にするために
            構成をチェックしてください。
        </para>

        <para>
            サーバー構成やアクセスレベル、
            またはその他の理由によって使いたいかもしれない二、三の他の設定があります。
        </para>

        <para>
            <emphasis>ALTERNATIVE SETUP</emphasis>では
            一緒にダウンロードするZend Frameworkを現状のまま保って、
            <constant>PATH</constant>の場所から<filename>zf.sh</filename>へのリンクを作成する必要があります。
            ZendFrameworkダウンロードの内容を
            <filename>/usr/local/share/ZendFramework</filename>や
            またはよりローカルに<filename>/home/username/lib/ZendFramework</filename>、
            そして<filename>zf.sh</filename>へのシンボリックリンクを作成した
            場所に入れることができることを意味します。
        </para>

        <para>
            リンクを<filename>/usr/local/bin</filename>
            （これは、例えばリンクを<filename>/home/username/bin/</filename>に入れても動作するでしょう）
            に置きたいならば、あなたはこれに類似したコマンドを発行するでしょう:
        </para>

        <programlisting language="sh"><![CDATA[
ln -s /usr/local/share/ZendFramework/bin/zf.sh /usr/local/bin/zf

# または (例えば)
ln -s /home/username/lib/ZendFramework/bin/zf.sh /home/username/bin/zf
]]></programlisting>

        <para>
            コマンドラインでグローバルにアクセスすることができるはずのリンクをこれは確立します。
        </para>

    </sect2>

    <sect2 id="zend.tool.framework.clitool.setup-windows">
        <title>WindowsでCLIツールを設定</title>

        <para>
            Windows Win32環境で最も一般的な準備は、
            <acronym>PHP</acronym>バイナリと同じディレクトリに<filename>zf.bat</filename>と<filename>zf.php</filename>をコピーすることです。
            これは、通常、以下の場所のうちの1つで見つけられます:
        </para>

        <programlisting language="text"><![CDATA[
C:\PHP
C:\Program Files\ZendServer\bin\
C:\WAMP\PHP\bin
]]></programlisting>

        <para>
            あなたは、コマンドラインで<filename>php.exe</filename>を実行できるはずです。
            できなければ、
            最初に、<acronym>PHP</acronym>ディストリビューションに付属していたドキュメンテーションをチェックしてください、
            さもなければ、<filename>php.exe</filename>へのパスがあなたのWindows <constant>PATH</constant>環境変数であることを確認してください。
        </para>

        <para>
            次の課題は、Zend Frameworkライブラリがシステム<acronym>PHP</acronym> <property>include_path</property>の中で
            正しく設定されることを確実にすることです。
            <property>include_path</property>が位置するところを見つけ出すために、
            <command>php -i</command> を入力したり、<property>include_path</property>変数を探したりできます。
            grepが使えるCygwin構成があるなら、より簡潔に、 <command>php -i | grep include_path</command> を実行します。
            一旦<property>include_path</property>が位置するところ
            （これは通常、<filename>C:\PHP\pear</filename> や <filename>C:\PHP\share</filename>、<filename>C:\Program Files\ZendServer\share</filename> または同様の何かです）
            を見つけたら、library/ ディレクトリの内容が
            <property>include_path</property>に指定されたディレクトリに置かれることを確実にしてください。
        </para>

        <para>
            一旦それらの2つのことをしたなら、
            コマンドを発行して、このような固有のレスポンスを戻すことができるはずです:
        </para>

        <para>
            <inlinegraphic scale="100" align="center" valign="middle"
                fileref="figures/zend.tool.framework.cliversionwin32.png" format="PNG" />
        </para>

        <para>
            あなたがこの種の出力に遭遇しないならば、
            戻って、必要な部分の全てを固有の場所に持つことを確実にするために
            構成をチェックしてください。
        </para>

        <para>
            サーバー構成やアクセスレベル、
            またはその他の理由によって使いたいかもしれない二、三の他の設定があります。
        </para>

        <para>
            <emphasis>ALTERNATIVE SETUP</emphasis>では
            一緒にダウンロードするZend Frameworkを現状のまま保って、
            システム<constant>PATH</constant>と<filename>php.ini</filename>ファイルの両方を変更する必要があります。
            ユーザー環境で、<filename>zf.bat</filename>ファイルが実行可能であるように、
            必ず<filename>C:\Path\To\ZendFramework\bin</filename>を加えるようにしてください。
            また、<filename>C:\Path\To\ZendFramework\library</filename>が
            <property>include_path</property>にあることを確実にするために、
            <filename>php.ini</filename>ファイルを変えてください。
        </para>

    </sect2>

    <sect2 id="zend.tool.framework.clitool.setup-othernotes">
        <title>設定での他の考慮事項</title>

        <para>
            もし何らかの理由で<property>include_path</property>の中にZend Frameworkライブラリを必要としないならば、
            もう一つの選択肢があります。
            <filename>zf.php</filename>がZend Frameworkインストールの位置を決定するために利用する2つの特別な環境変数があります。
        </para>

        <para>
            1つ目は<constant>ZEND_TOOL_INCLUDE_PATH_PREPEND</constant>です。
            クライアントをロードする前にシステム（<filename>php.ini</filename>）の<property>include_path</property>に
            この環境変数の値を前に付加します。
        </para>

        <para>
            あるいは、<command>zf</command>コマンドライン・ツールのために特に辻褄が合うもののために
            完全にシステム<property>include_path</property>を<emphasis>取り替える</emphasis>
            <constant>ZEND_TOOL_INCLUDE_PATH</constant>を使いたいかもしれません。
        </para>
    </sect2>

    <sect2 id="zend.tool.framework.clitool.continuing">
        <title>次に進むべきところは？</title>

        <para>
            この時点では、よりちょっと「面白い」コマンドの奥義を伝え始めるために準備されなければなりません。
            動き出すためには、何が利用できるか見るために、
            <command>zf --help</command>コマンドを発行できます。
        </para>

        <para>
            <inlinegraphic scale="100" align="center" valign="middle"
                fileref="figures/zend.tool.framework.clihelp.png" format="PNG" />
        </para>

        <para>
            プロジェクト作成のために<command>zf</command>スクリプトを使用する方法を理解するために、
            <classname>Zend_Tool_Project</classname>の「プロジェクトの作成」CreateProject節に進んでください。
        </para>
    </sect2>
</sect1>
