<?xml version="1.0" encoding="UTF-8"?>
<!-- Reviewed: no -->
<!-- EN-Revision: 20779 -->
<sect1 id="zend.gdata.youtube">
    <title>YouTube Data API の使用法</title>

    <para>
        YouTube data <acronym>API</acronym> は、YouTube のコンテンツを読み書きする機能を提供します。
        認証済みでないリクエストを Google Data フィードに実行し、
        人気のある動画やコメント、YouTube 登録ユーザの公開情報
        (たとえばプレイリストや購読内容、コンタクトなど)
        を取得できます。
    </para>

    <para>
        YouTube Data <acronym>API</acronym> についての詳細は、code.google.com の
        <ulink url="http://code.google.com/apis/youtube/developers_guide_php.html">
        <acronym>PHP</acronym> Developer's Guide</ulink> を参照ください。
    </para>

    <sect2 id="zend.gdata.youtube.authentication">
        <title>認証</title>
        <para>
          YouTube Data <acronym>API</acronym> は、公開データへの読み取り専用アクセス機能を提供しており、
          認証は不要です。書き込みリクエストを行う場合は、ClientLogin
          あるいは AuthSub でのユーザ認証が必要となります。詳細は
          <ulink url="http://code.google.com/apis/youtube/developers_guide_php.html#Authentication">
          <acronym>PHP</acronym> Developer's Guide の認証のセクション</ulink>
          を参照ください。
        </para>
    </sect2>

    <sect2 id="zend.gdata.youtube.developer_key">
        <title>Developer Keys および Client ID</title>
        <para>
            デベロッパーキーは、<acronym>API</acronym> リクエストを行う YouTube
            開発者を識別するためのものです。クライアント ID
            は、ログの記録やデバッグなどの際にアプリケーションを識別するものです。
            <ulink url="http://code.google.com/apis/youtube/dashboard/">http://code.google.com/apis/youtube/dashboard/</ulink>
            でデベロッパーキーとクライアント ID を取得できます。
            下の例は、デベロッパーキーとクライアント ID を
            <ulink url="http://framework.zend.com/apidoc/core/Zend_Gdata/Zend_Gdata_YouTube.html">Zend_Gdata_YouTube</ulink>
            サービスオブジェクトに渡すものです。
        </para>
        <example id="zend.gdata.youtube.developer_key.example">
          <title>Developer Key と ClientID を Zend_Gdata_YouTube に渡す</title>
            <programlisting language="php"><![CDATA[
$yt = new Zend_Gdata_YouTube($httpClient,
                             $applicationId,
                             $clientId,
                             $developerKey);
]]></programlisting>
            </example>
    </sect2>

    <sect2 id="zend.gdata.youtube.videos">
        <title>公開動画フィードの取得</title>

        <para>
            YouTube data <acronym>API</acronym> はさまざまなフィードを提供しており、
            たとえば標準の動画一覧や関連する動画一覧、動画への返信一覧、
            アップロードした動画の一覧、お気に入りの動画一覧などを取得できます。
            たとえばアップロードした動画一覧のフィードは、
            指定したユーザがアップロードしたすべての動画を返します。
            どのようなフィードが取得できるのかについては
            <ulink url="http://code.google.com/apis/youtube/reference.html#Video_Feeds">
            YouTube <acronym>API</acronym> リファレンスガイド</ulink> を参照ください。
        </para>

        <sect3 id="zend.gdata.youtube.videos.searching">
            <title>メタデータによる動画の検索</title>

            <para>
                指定した条件にマッチする動画の一覧を、YouTubeQuery
                クラスを用いて取得できます。
                たとえば次のクエリは、メタデータに "cat" という単語を含む動画を探し、
                その結果の 10 番目から 1 ページあたり 20 件ずつ表示します。
                また、閲覧回数順に表示します。
            </para>
        <example id="zend.gdata.youtube.videos.searching.example">
          <title>動画の検索</title>
            <programlisting language="php"><![CDATA[
$yt = new Zend_Gdata_YouTube();
$query = $yt->newVideoQuery();
$query->videoQuery = 'cat';
$query->startIndex = 10;
$query->maxResults = 20;
$query->orderBy = 'viewCount';

echo $query->queryUrl . "\n";
$videoFeed = $yt->getVideoFeed($query);

foreach ($videoFeed as $videoEntry) {
    echo "---------動画----------\n";
    echo "タイトル: " . $videoEntry->getVideoTitle() . "\n";
    echo "\n説明:\n";
    echo $videoEntry->getVideoDescription();
    echo "\n\n\n";
}
]]></programlisting>
            </example>

            <para>
                その他のクエリパラメータの詳細は
                <ulink url="http://code.google.com/apis/youtube/reference.html#Searching_for_videos">
                リファレンスガイド</ulink>を参照ください。
                <ulink url="http://framework.zend.com/apidoc/core/Zend_Gdata/Zend_Gdata_YouTube_VideoQuery.html">
                <classname>Zend_Gdata_YouTube_VideoQuery</classname></ulink>
                には、これらのパラメータ用のヘルパー関数もあります。詳細は
                <ulink url="http://code.google.com/apis/youtube/developers_guide_php.html#SearchingVideos"><acronym>PHP</acronym> Developer's Guide</ulink>
                を参照ください。
            </para>
        </sect3>

        <sect3 id="zend.gdata.youtube.videos.searchingcategories">
            <title>カテゴリやタグ/キーワードによる動画の検索</title>

            <para>
                カテゴリを指定して動画を検索するには、
                <ulink url="http://code.google.com/apis/youtube/reference.html#Category_search">
                専用の <acronym>URL</acronym> を作成します</ulink>。たとえば、dog
                というキーワードを含むコメディーの動画を検索するには次のようにします。
            </para>
             <example id="zend.gdata.youtube.videos.searchingcategories.example">
          <title>指定したカテゴリの動画の検索</title>
            <programlisting language="php"><![CDATA[
$yt = new Zend_Gdata_YouTube();
$query = $yt->newVideoQuery();
$query->category = 'Comedy/dog';

echo $query->queryUrl . "\n";
$videoFeed = $yt->getVideoFeed($query);
]]></programlisting>
            </example>
        </sect3>

        <sect3 id="zend.gdata.youtube.videos.standard">
            <title>標準のフィード</title>

            <para>
                YouTube Data <acronym>API</acronym> が提供する
                <ulink url="http://code.google.com/apis/youtube/reference.html#Standard_feeds">
                標準フィード</ulink> にはさまざまなものがあります。
                これらの標準フィードは、<acronym>URL</acronym> を指定することで
                <ulink url="http://framework.zend.com/apidoc/core/Zend_Gdata/Zend_Gdata_YouTube_VideoFeed.html">Zend_Gdata_YouTube_VideoFeed</ulink>
                オブジェクトとして取得できます。<acronym>URL</acronym> の指定には
                <ulink url="http://framework.zend.com/apidoc/core/Zend_Gdata/Zend_Gdata_YouTube.html">Zend_Gdata_YouTube</ulink>
                クラスの定義済み定数
                (たとえば Zend_Gdata_YouTube::STANDARD_TOP_RATED_URI)
                を使用するか、あるいは定義済みヘルパーメソッド
                (下のコードを参照ください) を使用します。
            </para>

            <para>
                評価の高い動画を取得するヘルパーメソッドは次のようになります。
            </para>
            <example id="zend.gdata.youtube.videos.standard.example-1">
          <title>標準の動画フィードの取得</title>
            <programlisting language="php"><![CDATA[
$yt = new Zend_Gdata_YouTube();
$videoFeed = $yt->getTopRatedVideoFeed();
]]></programlisting>
            </example>
            <para>
                取得する標準フィードの期間を指定するクエリパラメータもあります。
            </para>

            <para>
              たとえば、今日いちばん評価の高い動画を取得するには次のようにします。
            </para>
<example id="zend.gdata.youtube.videos.standard.example-2">
          <title>Zend_Gdata_YouTube_VideoQuery を使用した動画の取得</title>
            <programlisting language="php"><![CDATA[
$yt = new Zend_Gdata_YouTube();
$query = $yt->newVideoQuery();
$query->setTime('today');
$videoFeed = $yt->getTopRatedVideoFeed($query);
]]></programlisting>
            </example>
            <para>
                あるいは、次のように <acronym>URL</acronym> を使用してフィードを取得することもできます。
            </para>

<example id="zend.gdata.youtube.videos.standard.example-3">
          <title>URL からの動画フィードの取得</title>
            <programlisting language="php"><![CDATA[
$yt = new Zend_Gdata_YouTube();
$url = 'http://gdata.youtube.com/feeds/standardfeeds/top_rated?time=today'
$videoFeed = $yt->getVideoFeed($url);
]]></programlisting>
            </example>
        </sect3>

        <sect3 id="zend.gdata.youtube.videos.user">
            <title>指定したユーザがアップロードした動画の取得</title>

            <para>
                指定したユーザがアップロードした動画の一覧を取得するヘルパーメソッドもあります。
                次の例は、ユーザ 'liz' がアップロードした動画の一覧を取得します。
            </para>
            <example id="zend.gdata.youtube.videos.user.example">
          <title>指定したユーザがアップロードした動画の取得</title>
            <programlisting language="php"><![CDATA[
$yt = new Zend_Gdata_YouTube();
$videoFeed = $yt->getUserUploads('liz');
]]></programlisting>
            </example>
        </sect3>

        <sect3 id="zend.gdata.youtube.videos.favorites">
            <title>指定したユーザのお気に入り動画の取得</title>

            <para>
                指定したユーザのお気に入り動画の一覧を取得するヘルパーメソッドもあります。
                次の例は、ユーザ 'liz' のお気に入り動画の一覧を取得します。
            </para>
            <example id="zend.gdata.youtube.videos.favorites.example">
          <title>指定したユーザのお気に入り動画の取得</title>
            <programlisting language="php"><![CDATA[
$yt = new Zend_Gdata_YouTube();
$videoFeed = $yt->getUserFavorites('liz');
]]></programlisting>
            </example>

        </sect3>

        <sect3 id="zend.gdata.youtube.videos.responses">
            <title>動画に対する返信動画の取得</title>

            <para>
                指定した動画に対する動画の返信の一覧を取得するヘルパーメソッドもあります。
                次の例は、ID 'abc123813abc' の動画に対する返信動画を取得します。
            </para>
            <example id="zend.gdata.youtube.videos.responses.example">
          <title>動画への返信のフィードの取得</title>
            <programlisting language="php"><![CDATA[
$yt = new Zend_Gdata_YouTube();
$videoFeed = $yt->getVideoResponseFeed('abc123813abc');
]]></programlisting>
            </example>
        </sect3>
    </sect2>

    <sect2 id="zend.gdata.youtube.comments">
        <title>動画のコメントの取得</title>

        <para>
            YouTube の動画に対するコメントを取得するにはいくつかの方法があります。
            ID 'abc123813abc' の動画に対するコメントを取得するコードは、次のようになります。
        </para>
            <example id="zend.gdata.youtube.videos.comments.example-1">
          <title>動画 ID からの動画へのコメントのフィードの取得</title>

        <programlisting language="php"><![CDATA[
$yt = new Zend_Gdata_YouTube();
$commentFeed = $yt->getVideoCommentFeed('abc123813abc');

foreach ($commentFeed as $commentEntry) {
    echo $commentEntry->title->text . "\n";
    echo $commentEntry->content->text . "\n\n\n";
}
]]></programlisting>
        </example>

        <para>
            もし既にその動画を表す
            <ulink url="http://framework.zend.com/apidoc/core/Zend_Gdata/Zend_Gdata_YouTube_VideoEntry.html">Zend_Gdata_YouTube_VideoEntry</ulink>
            オブジェクトがあるのなら、それを用いてその動画のコメントを取得することもできます。
        </para>
           <example id="zend.gdata.youtube.videos.comments.example-2">
          <title>Zend_Gdata_YouTube_VideoEntry からの動画へのコメントのフィードの取得</title>

            <programlisting language="php"><![CDATA[
$yt = new Zend_Gdata_YouTube();
$videoEntry = $yt->getVideoEntry('abc123813abc');
// 動画の ID がわからなくても、このようにして URL を取得できます
$commentFeed = $yt->getVideoCommentFeed(null,
                                        $videoEntry->comments->href);
]]></programlisting>
            </example>

    </sect2>

    <sect2 id="zend.gdata.youtube.playlists">
        <title>プレイリストフィードの取得</title>

        <para>
            YouTube data <acronym>API</acronym> を使用すると、
            プロファイルやプレイリスト、購読内容といったユーザ情報を取得できます。
        </para>

        <sect3 id="zend.gdata.youtube.playlists.user">
            <title>指定したユーザのプレイリストの取得</title>

            <para>
                このライブラリには、指定したユーザのプレイリストを取得するためのヘルパーメソッドがあります。
                ユーザ 'liz' のプレイリストを取得するには、次のようにします。
            </para>
                       <example id="zend.gdata.youtube.playlists.user.example">
          <title>指定したユーザのプレイリストの取得</title>

            <programlisting language="php"><![CDATA[
$yt = new Zend_Gdata_YouTube();
$playlistListFeed = $yt->getPlaylistListFeed('liz');

foreach ($playlistListFeed as $playlistEntry) {
    echo $playlistEntry->title->text . "\n";
    echo $playlistEntry->description->text . "\n";
    echo $playlistEntry->getPlaylistVideoFeedUrl() . "\n\n\n";
}
]]></programlisting>
            </example>
        </sect3>

        <sect3 id="zend.gdata.youtube.playlists.special">
            <title>指定したプレイリストの取得</title>

            <para>
                このライブラリには、
                指定したプレイリストの動画一覧を取得するヘルパーメソッドがあります。
                指定したプレイリストエントリの動画一覧を取得するには、次のようにします。
            </para>
          <example id="zend.gdata.youtube.playlists.special.example">
          <title>指定したプレイリストの取得</title>
            <programlisting language="php"><![CDATA[
$feedUrl = $playlistEntry->getPlaylistVideoFeedUrl();
$playlistVideoFeed = $yt->getPlaylistVideoFeed($feedUrl);
]]></programlisting>
            </example>
        </sect3>
    </sect2>

    <sect2 id="zend.gdata.youtube.subscriptions">
        <title>指定したユーザの購読内容の一覧の取得</title>

        <para>
            ユーザは、チャンネルやタグ、お気に入りなどの内容を購読できます。
            <ulink url="http://framework.zend.com/apidoc/core/Zend_Gdata/Zend_Gdata_YouTube_SubscriptionEntry.html">Zend_Gdata_YouTube_SubscriptionEntry</ulink>
            を使用して、それらの購読内容を表します。
        </para>

        <para>
            ユーザ 'liz' のすべての購読内容を取得するには、次のようにします。
        </para>
        <example id="zend.gdata.youtube.subscriptions.example">
          <title>指定したユーザのすべての購読の取得</title>

        <programlisting language="php"><![CDATA[
$yt = new Zend_Gdata_YouTube();
$subscriptionFeed = $yt->getSubscriptionFeed('liz');

foreach ($subscriptionFeed as $subscriptionEntry) {
    echo $subscriptionEntry->title->text . "\n";
}
]]></programlisting>
        </example>
    </sect2>

    <sect2 id="zend.gdata.youtube.profile">
        <title>ユーザのプロファイルの取得</title>

        <para>
            任意の YouTube ユーザの公開プロファイル情報を取得できます。
            ユーザ 'liz' のプロファイルを取得するには、次のようにします。
        </para>
                  <example id="zend.gdata.youtube.profile.example">
          <title>ユーザのプロファイルの取得</title>

        <programlisting language="php"><![CDATA[
$yt = new Zend_Gdata_YouTube();
$userProfile = $yt->getUserProfile('liz');
echo "ユーザ名: " . $userProfile->username->text . "\n";
echo "年齢: " . $userProfile->age->text . "\n";
echo "出身地: " . $userProfile->hometown->text . "\n";
]]></programlisting>
        </example>
    </sect2>

    <sect2 id="zend.gdata.youtube.uploads">
      <title>YouTube への動画のアップロード</title>

      <para>
        アップロードのおおまかな手順については、code.google.com の
        <ulink url="http://code.google.com/apis/youtube/developers_guide_protocol.html#Process_Flows_for_Uploading_Videos">
        プロトコルガイド</ulink>の図を参照ください。
        動画のアップロードには 2 通りの方法があります。
        動画を直接送信するか、単に動画のメタデータだけを送信して動画は
        HTML フォームでアップロードさせるかです。
      </para>

      <para>
        動画を直接アップロードするには、まず新しい
        <ulink url="http://framework.zend.com/apidoc/core/Zend_Gdata/Zend_Gdata_YouTube_VideoEntry.html">Zend_Gdata_YouTube_VideoEntry</ulink>
        オブジェクトを作成して必須メタデータを指定しなければなりません。
        次の例は、Quicktime 動画 "mytestmovie.mov" を以下のプロパティで
        YouTube にアップロードするものです。
      </para>
        <table id="zend.gdata.youtube.uploads.metadata">
          <title>以下のサンプルで使用するメタデータ</title>
          <tgroup cols="2" align="left" colsep="1" rowsep="1">
            <thead>
              <row>
                <entry>プロパティ</entry>
                <entry>値</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry>Title</entry>
                <entry>My Test Movie</entry>
              </row>
              <row>
                <entry>Category</entry>
                <entry>Autos</entry>
              </row>
              <row>
                <entry>Keywords</entry>
                <entry>cars, funny</entry>
              </row>
              <row>
                <entry>Description</entry>
                <entry>My description</entry>
              </row>
              <row>
                <entry>Filename</entry>
                <entry>mytestmovie.mov</entry>
              </row>
              <row>
                <entry>File <acronym>MIME</acronym> type</entry>
                <entry>video/quicktime</entry>
              </row>
              <row>
                <entry>Video private?</entry>
                <entry><constant>FALSE</constant></entry>
              </row>
              <row>
                <entry>Video location</entry>
                <entry>37, -122 (lat, long)</entry>
              </row>
              <row>
                <entry>Developer Tags</entry>
                <entry>mydevelopertag, anotherdevelopertag</entry>
              </row>
            </tbody>
            </tgroup>
      </table>
      <para>
        下のコードは、アップロード用に空の
        <ulink url="http://framework.zend.com/apidoc/core/Zend_Gdata/Zend_Gdata_YouTube_VideoEntry.html">Zend_Gdata_YouTube_VideoEntry</ulink>
        を作成します。次に
        <ulink url="http://framework.zend.com/apidoc/core/Zend_Gdata/Zend_Gdata_App_MediaFileSource.html">Zend_Gdata_App_MediaFileSource</ulink>
        オブジェクトを使用して実際の動画ファイルを保持させます。水面下では、
        <ulink url="http://framework.zend.com/apidoc/core/Zend_Gdata/Zend_Gdata_YouTube_Extension_MediaGroup.html">Zend_Gdata_YouTube_Extension_MediaGroup</ulink>
        オブジェクトを使用して動画のすべてのメタデータを保持します。
        以下で説明するヘルパーメソッドを使用すると、
        メディアグループオブジェクトのことを気にせず動画のメタデータを設定できます。
        $uploadUrl は、新しいエントリを投稿する場所です。
        これは、認証済みユーザの名前 $userName で指定することもできますし、
        シンプルに 'default' と指定して現在の認証済みユーザを自動的に利用することもできます。
      </para>
          <example id="zend.gdata.youtube.uploads.example">
          <title>動画のアップロード</title>

    <programlisting language="php"><![CDATA[
$yt = new Zend_Gdata_YouTube($httpClient);
$myVideoEntry = new Zend_Gdata_YouTube_VideoEntry();

$filesource = $yt->newMediaFileSource('mytestmovie.mov');
$filesource->setContentType('video/quicktime');
$filesource->setSlug('mytestmovie.mov');

$myVideoEntry->setMediaSource($filesource);

$myVideoEntry->setVideoTitle('My Test Movie');
$myVideoEntry->setVideoDescription('My Test Movie');
// カテゴリは YouTube のカテゴリとして妥当な形式でなければならないことに注意 !
$myVideoEntry->setVideoCategory('Comedy');

// キーワードを設定します。カンマ区切りの文字列であり、
// 各キーワードには空白文字を含めてはいけないことに注意しましょう
$myVideoEntry->SetVideoTags('cars, funny');

// オプションで、デベロッパタグを指定します
$myVideoEntry->setVideoDeveloperTags(array('mydevelopertag',
                                           'anotherdevelopertag'));

// オプションで、動画の撮影場所を指定します
$yt->registerPackage('Zend_Gdata_Geo');
$yt->registerPackage('Zend_Gdata_Geo_Extension');
$where = $yt->newGeoRssWhere();
$position = $yt->newGmlPos('37.0 -122.0');
$where->point = $yt->newGmlPoint($position);
$myVideoEntry->setWhere($where);

// 現在の認証済みユーザ用のアップロード URI
$uploadUrl =
    'http://uploads.gdata.youtube.com/feeds/users/default/uploads';

// 動画をアップロードし、Zend_Gdata_App_HttpException あるいは通常の
// Zend_Gdata_App_Exception を捕捉します

try {
    $newEntry = $yt->insertEntry($myVideoEntry,
                                 $uploadUrl,
                                 'Zend_Gdata_YouTube_VideoEntry');
} catch (Zend_Gdata_App_HttpException $httpException) {
    echo $httpException->getRawResponseBody();
} catch (Zend_Gdata_App_Exception $e) {
    echo $e->getMessage();
}
]]></programlisting>
</example>
    <para>
      非公開で動画をアップロードするには、アップロードの前に
      $myVideoEntry->setVideoPrivate(); を実行します。
      $videoEntry->isVideoPrivate() を使用すると、
      その動画エントリが非公開かどうかを調べることができます。
    </para>
  </sect2>

    <sect2 id="zend.gdata.youtube.uploads.browser">
      <title>ブラウザベースのアップロード</title>

      <para>
        ブラウザベースのアップロードも直接のアップロードとほとんど同じ処理ですが、
        作成した
        <ulink url="http://framework.zend.com/apidoc/core/Zend_Gdata/Zend_Gdata_YouTube_VideoEntry.html">Zend_Gdata_YouTube_VideoEntry</ulink>
        に
        <ulink url="http://framework.zend.com/apidoc/core/Zend_Gdata/Zend_Gdata_App_MediaFileSource.html">Zend_Gdata_App_MediaFileSource</ulink>
        オブジェクトをアタッチしないという点が異なります。
        そのかわりに、動画のすべてのメタデータを送信してトークン要素を受け取り、
        それを用いて HTML アップロードフォームを作成します。
      </para>
          <example id="zend.gdata.youtube.uploads.browser.example-1">
          <title>ブラウザベースのアップロード</title>

      <programlisting language="php"><![CDATA[
$yt = new Zend_Gdata_YouTube($httpClient);

$myVideoEntry= new Zend_Gdata_YouTube_VideoEntry();
$myVideoEntry->setVideoTitle('My Test Movie');
$myVideoEntry->setVideoDescription('My Test Movie');

// YouTube のカテゴリとして妥当な形式でなければならないことに注意
$myVideoEntry->setVideoCategory('Comedy');
$myVideoEntry->SetVideoTags('cars, funny');

$tokenHandlerUrl = 'http://gdata.youtube.com/action/GetUploadToken';
$tokenArray = $yt->getFormUploadToken($myVideoEntry, $tokenHandlerUrl);
$tokenValue = $tokenArray['token'];
$postUrl = $tokenArray['url'];
]]></programlisting>
      </example>
    <para>
      上のコードは、リンクとトークンを表示します。
      これらを元に、ユーザのブラウザに表示させる HTML フォームを構築します。
      シンプルなフォームの例を以下に示します。
      $tokenValue が返されたトークン要素の中身をあらわしており、
      これは上の $myVideoEntry から取得したものです。
      フォームを送信したあとであなたのサイトにリダイレクトさせるには、
      パラメータ $nextUrl を上の $postUrl に追加します。
      これは、AuthSub リンクにおけるパラメータ $next と同じように機能します。
      唯一の違いは、一度きりのトークンではなく
      status と id を <acronym>URL</acronym> の中に含めて返すということです。
    </para>
          <example id="zend.gdata.youtube.uploads.browser.example-2">
          <title>ブラウザベースのアップロード: HTML フォームの作成</title>

      <programlisting language="php"><![CDATA[
// アップロード後のリダイレクト先
$nextUrl = 'http://mysite.com/youtube_uploads';

$form = '<form action="'. $postUrl .'?nexturl='. $nextUrl .
        '" method="post" enctype="multipart/form-data">'.
        '<input name="file" type="file"/>'.
        '<input name="token" type="hidden" value="'. $tokenValue .'"/>'.
        '<input value="動画のアップロード" type="submit" />'.
        '</form>';
]]></programlisting>
      </example>
  </sect2>
    <sect2 id="zend.gdata.youtube.uploads.status">
      <title>アップロード状況のチェック</title>

      <para>
        動画をアップロードしたら、認証済みユーザのアップロードフィードにすぐに反映されます。
        しかし、公開手続きがすむまではサイト上では公開されません。
        却下された動画やアップロードが正常終了しなかった動画についても、
        認証ユーザのアップロードフィードのみに現れるようになります。
        次のコードは、
        <ulink url="http://framework.zend.com/apidoc/core/Zend_Gdata/Zend_Gdata_YouTube_VideoEntry.html">Zend_Gdata_YouTube_VideoEntry</ulink>
        の状態をチェックして、公開されているかいないか、また却下されたのかどうかを調べます。
      </para>
      <example id="zend.gdata.youtube.uploads.status.example">
          <title>動画のアップロード状況のチェック</title>

      <programlisting language="php"><![CDATA[
try {
    $control = $videoEntry->getControl();
} catch (Zend_Gdata_App_Exception $e) {
    echo $e->getMessage();
}

if ($control instanceof Zend_Gdata_App_Extension_Control) {
    if ($control->getDraft() != null &&
        $control->getDraft()->getText() == 'yes') {
        $state = $videoEntry->getVideoState();

        if ($state instanceof Zend_Gdata_YouTube_Extension_State) {
            print 'アップロード状況: '
                  . $state->getName()
                  .' '. $state->getText();
        } else {
            print 'まだ動画の状況についての情報を取得できません。'
                  . "また後で試してみてください。\n";
        }
    }
}
]]></programlisting>
      </example>
  </sect2>
    <sect2 id="zend.gdata.youtube.other">
      <title>その他の関数</title>

      <para>
        これまで説明してきたもの以外にも YouTube API にはさまざまな機能が存在し、
        動画のメタデータを編集したり動画エントリを削除したり、
        サイト上のコミュニティ機能を利用したりといったことが可能です。
        API で操作できるコミュニティ機能としては、
        評価やコメント、プレイリスト、購読、ユーザプロファイル、コンタクト、メッセージなどがあります。
      </para>
      <para>
        完全なドキュメントは、code.google.com の
        <ulink url="http://code.google.com/apis/youtube/developers_guide_php.html"><acronym>PHP</acronym> Developer's Guide</ulink>
        を参照ください。
      </para>
    </sect2>
</sect1>
