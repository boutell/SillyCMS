<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: 20100 -->
<!-- Reviewed: no -->
<sect1 id="zend.currency.value">
    <title>Wie viel Währung habe ich?</title>

    <para>
        Wenn man mit Währungen arbeitet will man normalerweise eine Menge an Geld darstellen. Und
        wenn man mit unterschiedlichen Währungen arbeitet dann will man mit Ihnen drei verschiedene
        Dinge machen. Man will die Menge anzeigen, eine Genauigkeit und möglicherweise einen
        Wechselkurs verwenden.
    </para>

    <sect2 id="zend.currency.value.money">
        <title>Arbeiten mit Währungswerten</title>

        <para>
            Der Wert einer Währung, auch als Geld bekannt, welchen man verwenden will kann durch
            Verwendung der Option <property>value</property> gesetzt werden.
        </para>

        <programlisting language="php"><![CDATA[
$currency = new Zend_Currency(
    array(
        'value'    => 1000,
        'currency' => 'USD',
    )
);

print $currency; // Könnte '$ 1.000' zurückgeben
]]></programlisting>

        <para>
            Durch Verwendung der Methode <methodname>setFormat()</methodname> mit dieser
            Arrayoption, und durch Verwendung der Methode <methodname>setValue()</methodname> kann
            der Wert im Nachhinein gesetzt werden.
        </para>

        <programlisting language="php"><![CDATA[
$currency = new Zend_Currency(
    array(
        'value'    => 1000,
        'currency' => 'USD',
    )
);

print $currency->setValue(2000); // Könnte '$ 2.000' zurückgeben
]]></programlisting>

        <para>
            Mit der Methode <methodname>getValue()</methodname> erhält man den aktuell gesetzten
            Wert.
        </para>
    </sect2>

    <sect2 id="zend.currency.value.precision">
        <title>Verwendung von Genauigkeit bei Währungen</title>

        <para>
            Wenn man mit Währungen arbeitet muss man möglicherweise auch eine Genauigkeit verwenden.
            Die meisten Währungen verwenden eine Genauigkeit von 2. Das bedeutet, wenn man 100 US
            Dollar hat dass man auch 50 Cent haben könnte. Der betreffende Wert ist einfach eine
            Gleitkommazahl.
        </para>

        <programlisting language="php"><![CDATA[
$currency = new Zend_Currency(
    array(
        'value'    => 1000.50,
        'currency' => 'USD',
    )
);

print $currency; // Könnte '$ 1.000,50' zurückgeben
]]></programlisting>

        <para>
            Natürlich bekommt man, durch die standardmäßige Genauigkeit von 2, '00' für den
            Dezimalwert wenn es keine Genauigkeit anzuzeigen gibt.
        </para>

        <programlisting language="php"><![CDATA[
$currency = new Zend_Currency(
    array(
        'value'    => 1000,
        'currency' => 'USD',
    )
);

print $currency; // Könnte '$ 1.000,00' zurückgeben
]]></programlisting>

        <para>
            Um die standardmäßige Genauigkeit zu entfernen kann die Option
            <property>precision</property> einfach auf '0' gesetzt werden. Und man kann jede andere
            Genauigkeit zwischen 0 und 9 setzen. Alle Werte werden gerundet oder gestreckt wenn Sie
            nicht in die gesetzte Genauigkeit passen.
        </para>

        <programlisting language="php"><![CDATA[
$currency = new Zend_Currency(
    array(
        'value'     => 1000,30,
        'currency'  => 'USD',
        'precision' => 0
    )
);

print $currency; // Könnte '$ 1.000' zurückgeben
]]></programlisting>
    </sect2>
</sect1>
