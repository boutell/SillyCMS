<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: 20818 -->
<!-- Reviewed: no -->
<sect1 id="zend.rest.server">
    <title>Zend_Rest_Server</title>

    <sect2 id="zend.rest.server.introduction">
        <title>Einführung</title>

        <para>
            <classname>Zend_Rest_Server</classname> ist ein komplett-feature REST Server.
        </para>
    </sect2>

    <sect2 id="zend.rest.server.usage">
        <title>Verwenden des REST Servers</title>

        <example id="zend.rest.server.usage.example-1">
            <title>Grundsätzliche Verwendung von Zend_Rest_Server: Klassen</title>

            <programlisting language="php"><![CDATA[
$server = new Zend_Rest_Server();
$server->setClass('My_Service_Class');
$server->handle();
]]></programlisting>
        </example>

        <example id="zend.rest.server.usage.example-2">
            <title>Grundsätzliche Verwendung von Zend_Rest_Server: Funktionen</title>

            <programlisting language="php"><![CDATA[
/**
 * Sag Hallo
 *
 * @param string $who
 * @param string $when
 * @return string
 */
function sayHello($who, $when)
{
    return "Hallo $who, Gut $when";
}

$server = new Zend_Rest_Server();
$server->addFunction('sayHello');
$server->handle();
]]></programlisting>
        </example>
    </sect2>

    <sect2 id="zend.rest.server.args">
        <title>Aufruf eines Zend_Rest_Server Services</title>

        <para>
            Um ein <classname>Zend_Rest_Server</classname> Service aufzurufen, muß ein GET/POST
            <code>method</code> Argument mit einem Wert angegeben werden, welcher der Methode
            entspricht, die aufgerufen werden soll. Es können anschließend beliebig viele Argumente
            folgen, die entweder den Namen des Arguments verwenden (z.B. "wer"), oder man kann
            <code>arg</code> verwenden, gefolgt von der nummerischen Position des Arguments (z.B.
            "arg1").
        </para>

        <note>
            <title>Nummerischer Index</title>

            <para>
                Nummerische Argumente verwenden einen 1-basierenden Index.
            </para>
        </note>

        <para>
            Um <code>sayHello</code> vom obigen Beispiel aufzurufen, kann:
        </para>

        <para>
            <code>?method=sayHello&amp;who=Davey&amp;when=Day</code>
        </para>

        <para>
            verwendet werden, oder:
        </para>

        <para>
            <code>?method=sayHello&amp;arg1=Davey&amp;arg2=Day</code>
        </para>
    </sect2>

    <sect2 id="zend.rest.server.customstatus">
        <title>Senden eines eigenen Status</title>

        <para>
            Wenn Werte zurückgegeben werden, kann man, um einen eigenen Status zurückzugeben, ein
            Array mit einem <code>status</code> Schlüssel zurückgeben.
        </para>

        <example id="zend.rest.server.customstatus.example-1">
            <title>Einen eigenen Status zurückgeben</title>

            <programlisting language="php"><![CDATA[
/**
 * Sag Hallo
 *
 * @param string $who
 * @param string $when
 * @return array
 */
function sayHello($who, $when)
{
    return array('msg' => 'Ein Fehler ist aufgetreten', 'status' => false);
}

$server = new Zend_Rest_Server();
$server->addFunction('sayHello');
$server->handle();
]]></programlisting>
        </example>
    </sect2>

    <sect2 id="zend.rest.server.customxml">
        <title>Eigene XML Antworten zurückgeben</title>

        <para>
            Wenn man eigenes <acronym>XML</acronym> zurückgeben will, kann einfach ein
            <code>DOMDocument</code>, <code>DOMElement</code> oder <code>SimpleXMLElement</code>
            Objekt zurückgegeben werden.
        </para>

        <example id="zend.rest.server.customxml.example-1">
            <title>Eigenes XML zurückgeben</title>

            <programlisting language="php"><![CDATA[
/**
 * Sag Hallo
 *
 * @param string $who
 * @param string $when
 * @return SimpleXMLElement
 */
function sayHello($who, $when)
{
    $xml ='<?xml version="1.0" encoding="ISO-8859-1"?>
<mysite>
    <value>Hallo $who! Hoffentlich hast Du einen guten $when</value>
    <code>200</code>
</mysite>';

    $xml = simplexml_load_string($xml);
    return $xml;
}

$server = new Zend_Rest_Server();
$server->addFunction('sayHello');

$server->handle();
]]></programlisting>
        </example>

        <para>
            Die Antwort des Services wird ohne Modifizierungen zum Client zurückgegeben.
        </para>
    </sect2>
</sect1>
