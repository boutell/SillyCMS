<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: 21815 -->
<!-- Reviewed: no -->
<sect1 id="zend.captcha.adapters">
    <title>CAPTCHA Adapter</title>

    <para>
        Die folgenden Adapter werden mit dem Zend Framework standardmäßig ausgeliefert.
    </para>

    <sect2 id="zend.captcha.adapters.word">
        <title>Zend_Captcha_Word</title>

        <para>
            <classname>Zend_Captcha_Word</classname> ist ein abstrakter Adapter der als Basisklasse
            für die meisten anderen <acronym>CAPTCHA</acronym> Adapter fungiert. Er bietet
            Mutatoren für die Spezifizierung der Wortlänge, Session <acronym>TTL</acronym>, das
            Session Namespaceobjekt das verwendet werden soll, und die Session Namespaceklasse die
            für die Persistenz zu verwenden ist wenn man
            <classname>Zend_Session_Namespace</classname> nicht verwenden will.
            <classname>Zend_Captcha_Word</classname> kapselt die Prüflogik.
        </para>

        <para>
            Standardmäßig ist die Wortlänge 8 Zeichen, das Sessiontimeout 5 Minuten und für die
            Persistenz wird <classname>Zend_Session_Namespace</classname> verwendet (wobei der
            Namespace "<classname>Zend_Form_Captcha_&lt;captcha ID&gt;</classname>" verwendet
            wird).
        </para>

        <para>
            Zusätzlich zu den Methoden wie vom <classname>Zend_Captcha_Adapter</classname> Interface
            benötigt werden bietet <classname>Zend_Captcha_Word</classname> die folgenden Methoden
            an:
        </para>

        <itemizedlist>
            <listitem>
                <para>
                    <methodname>setWordLen($length)</methodname> und
                    <methodname>getWordLen()</methodname> erlauben es die Länge des erzeugten
                    "Wortes" in Zeichen zu spezifizieren, und den aktuellen Wert zu erhalten.
                </para>
            </listitem>

            <listitem>
                <para>
                    <methodname>setTimeout($ttl)</methodname> und
                    <methodname>getTimeout()</methodname> erlauben es die Lebenszeit des
                    Sessiontokens zu spezifizieren, und den aktuellen Wert er erhalten.
                    <varname>$ttl</varname> sollte in Sekunden spezifiziert sein.
                </para>
            </listitem>

            <listitem>
                <para>
                    <methodname>setUseNumbers($numbers)</methodname> und
                    <methodname>getUseNumbers()</methodname> erlauben es zu spezifizieren ob Nummern
                    als mögliche Zeichen für den Zufall funktionieren oder ob nur Zeichen verwendet
                    werden.
                </para>
            </listitem>

            <listitem>
                <para>
                    <methodname>setSessionClass($class)</methodname> und
                    <methodname>getSessionClass()</methodname> erlauben es eine alternative
                    <classname>Zend_Session_Namespace</classname> Implementation zu spezifizieren
                    die verwendet werden soll um das <acronym>CAPTCHA</acronym> Token persistent zu
                    machen und den aktuellen Wert zu bekommen.
                </para>
            </listitem>

            <listitem>
                <para>
                    <methodname>getId()</methodname> erlaubt es den aktuellen Tokenidentifikator zu
                    erhalten.
                </para>
            </listitem>

            <listitem>
                <para>
                    <methodname>getWord()</methodname> erlaubt es das erzeugte Wort das mit dem
                    <acronym>CAPTCHA</acronym> verwendet wird zu erhalten. Es wird das Wort erzeugen
                    wenn es bis dahin noch nicht erstellt wurde.
                </para>
            </listitem>

            <listitem>
                <para>
                    <methodname>setSession(Zend_Session_Namespace $session)</methodname> erlaubt es
                    ein Sessionobjekt zu spezifizieren das für die Persistenz des
                    <acronym>CAPTCHA</acronym> Tokens verwendet wird.
                    <methodname>getSession()</methodname> erlaubt es das aktuelle Sessionobjekt
                    zu erhalten.
                </para>
            </listitem>
        </itemizedlist>

        <para>
            Alle Wort <acronym>CAPTCHA</acronym>s erlauben es ein Array von Optionen an den
            Konstruktor zu übergeben, oder alternativ dieses an
            <methodname>setOptions()</methodname> zu übergeben. Man kann auch ein
            <classname>Zend_Config</classname> Objekt an <methodname>setConfig()</methodname> zu
            übergeben. Standardmäßig können die <emphasis>wordLen</emphasis>,
            <emphasis>timeout</emphasis>, und <emphasis>sessionClass</emphasis> Schlüssel alle
            verwendet werden. Jede konkrete Implementation kann zusätzliche Schlüssel definieren
            oder die Optionen auf einem anderen Weg verwenden.
        </para>

        <note>
            <para>
                <classname>Zend_Captcha_Word</classname> ist eine abstrakte Klasse und kann nicht
                direkt instanziiert werden.
            </para>
        </note>
    </sect2>

    <sect2 id="zend.captcha.adapters.dumb">
        <title>Zend_Captcha_Dumb</title>

        <para>
            Der <classname>Zend_Captcha_Dumb</classname> Adapter ist fast selbsterklärend. Er
            bietet einen zufälligen String der in umgekehrter Reihenfolge eingegeben werden muß um
            validiert zu werden. Als solches ist es keine gute <acronym>CAPTCHA</acronym> Lösung,
            und sollte nur für Testzwecke verwendet werden. Er erweitert
            <classname>Zend_Captcha_Word</classname>.
        </para>
    </sect2>

    <sect2 id="zend.captcha.adapters.figlet">
        <title>Zend_Captcha_Figlet</title>

        <para>
            Der <classname>Zend_Captcha_Figlet</classname> Adapter verwendet
            <link linkend="zend.text.figlet"><classname>Zend_Text_Figlet</classname></link> um dem
            Benutzer ein Figlet zu präsentieren.
        </para>

        <para>
            Optionen die an den Konstruktor übergeben werden, werden auch an das
            <link linkend="zend.text.figlet"><classname>Zend_Text_Figlet</classname></link> Objekt
            übergeben. Schaue in die <link
                linkend="zend.text.figlet"><classname>Zend_Text_Figlet</classname></link>
            Dokumentation für Details darüber welche Konfigurationsoptionen vorhanden sind.
        </para>
    </sect2>

    <sect2 id="zend.captcha.adapters.image">
        <title>Zend_Captcha_Image</title>

        <para>
            Der <classname>Zend_Captcha_Image</classname> Adapter nimmt das erzeugte Wort und
            stellt es als Bild dar, führt diverse Verzerrungs-Permutationen durch und mach es so
            schwierig es automatisch zu entschlüsseln. Er benötigt die
            <ulink url="http://php.net/gd">GD Erweiterung</ulink> kompiliert mit TrueType oder
            Freetype Unterstützung. Aktuell kann der <classname>Zend_Captcha_Image</classname>
            Adapter nur <acronym>PNG</acronym> Bilder erzeugen.
        </para>

        <para>
            <classname>Zend_Captcha_Image</classname> erweitert
            <classname>Zend_Captcha_Word</classname>, und bietet zusätzlich die folgenden Methoden:
        </para>

        <itemizedlist>
            <listitem>
                <para>
                    <methodname>setExpiration($expiration)</methodname> und
                    <methodname>getExpiration()</methodname> erlauben es eine maximale Lebenszeit zu
                    definieren die das <acronym>CAPTCHA</acronym> Bild auf dem Dateisystem bleibt.
                    Das ist typischerweise längerer als die Session Lifetime. Die Garbage Collection
                    läuft periodisch jedes Mal wenn das <acronym>CAPTCHA</acronym> Objekt enthalten
                    ist, und löscht die Bilder die abgelaufen sind. Der Wert der Löschung sollte in
                    Sekunden angegeben werden.
                </para>
            </listitem>

            <listitem>
                <para>
                    <methodname>setGcFreq($gcFreq)</methodname> und
                    <methodname>getGcFreg()</methodname> erlauben es zu Spezifizieren wie oft die
                    Garbage Collection laufen soll. Die Garbage Collection wird alle
                    <command>1/$gcFreq</command> Aufrufe ausgeführt. Standard ist 100.
                </para>
            </listitem>

            <listitem>
                <para>
                    <methodname>setFont($font)</methodname> und <methodname>getFont()</methodname>
                    erlauben es die Schrift zu Spezifizieren die man verwenden will.
                    <varname>$font</varname> sollte ein voll qualifizierter Pfad zu der
                    Schriftart-Datei sein. Dieser Wert wird benötigt; das <acronym>CAPTCHA</acronym>
                    wird wärend der Erzeugung eine Ausnahme werfen wenn die Schriftdatei nicht
                    spezifiziert wurde.
                </para>
            </listitem>

            <listitem>
                <para>
                    <methodname>setFontSize($fsize)</methodname> und
                    <methodname>getFontSize()</methodname> erlauben es die Schriftgröße in Pixel zu
                    Spezifizieren die verwendet wird wenn das <acronym>CAPTCHA</acronym> erzeugt
                    wird. Der Standardwert ist 24px.
                </para>
            </listitem>

            <listitem>
                <para>
                    <methodname>setHeight($height)</methodname> und
                    <methodname>getHeight()</methodname> erlauben es die Höhe in Pixel zu
                    Spezifizieren die das erzeugte <acronym>CAPTCHA</acronym> Bild haben soll. Der
                    Standardwert ist 50px.
                </para>
            </listitem>

            <listitem>
                <para>
                    <methodname>setWidth($width)</methodname> und
                    <methodname>getWidth()</methodname> erlauben es die Breite in Pixel zu
                    Spezifizieren die das erzeugte <acronym>CAPTCHA</acronym> Bild haben soll. Der
                    Standardwert ist 200px.
                </para>
            </listitem>

            <listitem>
                <para>
                    <methodname>setImgDir($imgDir)</methodname> und
                    <methodname>getImgDir()</methodname> erlauben es das Verzeichnis für das
                    Speicher der <acronym>CAPTCHA</acronym> Bilder zu spezifizieren. Der
                    Standardwert ist "<filename>./images/captcha/</filename>", was relativ zum
                    Bootstrapskript zu sehen ist.
                </para>
            </listitem>

            <listitem>
                <para>
                    <methodname>setImgUrl($imgUrl)</methodname> und
                    <methodname>getImgUrl()</methodname> erlauben es den Relativen Pfad zum
                    <acronym>CAPTCHA</acronym> Bild für die Verwendung im <acronym>HTML</acronym>
                    Markup zu spezifizieren. Der Standardwert ist
                    "<filename>/images/captcha/</filename>".
                </para>
            </listitem>

            <listitem>
                <para>
                    <methodname>setSuffix($suffix)</methodname> und
                    <methodname>getSuffix()</methodname> erlauben es die Endung des Dateinamens für
                    das <acronym>CAPTCHA</acronym> Bild zu spezifizieren. Der Standardwert ist
                    "<filename>.png</filename>". Beachte: Das Ändern dieses Wertes wird den Typ des
                    erzeugten Bildes nicht ändern.
                </para>
            </listitem>

            <listitem>
                <para>
                    <methodname>setDotNoiseLevel($level)</methodname> und
                    <methodname>getDotNoiseLevel()</methodname> erlauben es zusammen mit
                    <methodname>setLineNoiseLevel($level)</methodname> und
                    <methodname>getLineNoiseLevel()</methodname> zu kontrollieren wieviel
                    "Rauschen" in der Form von zufälligen Punkten und Linien im Bild enthalten sein
                    sollen. Jede Einheit von <varname>$level</varname> erzeugt einen zufälligen
                    Punkt oder eine Linie. Der Standard ist 100 Punkte und 5 Linien. Das Rauschen
                    wird zweimal hinzugefügt - vor und nach der Umwandlung der Verzerrung des
                    Bildes.
                </para>
            </listitem>
        </itemizedlist>

        <para>
            Alle der obigen Optionen können an den Konstruktor übergeben werden indem einfach der
            Präfix der 'set' Methode entfernt wird und der Anfangsbuchstabe kleingeschrieben wird:
            "suffix", "height", "imgUrl", usw.
        </para>
    </sect2>

    <sect2 id="zend.captcha.adapters.recaptcha">
        <title>Zend_Captcha_ReCaptcha</title>

        <para>
            Der <classname>Zend_Captcha_ReCaptcha</classname> Adapter verwendet
            <link linkend="zend.service.recaptcha">Zend_Service_ReCaptcha</link> um
            <acronym>CAPTCHA</acronym>s zu erzeugen und zu prüfen. Es bietet die folgenden Methoden
            an:
        </para>

        <itemizedlist>
            <listitem>
                <para>
                    <methodname>setPrivKey($key)</methodname> und
                    <methodname>getPrivKey()</methodname> erlauben es den privaten Schlüssel zu
                    spezifizieren der für den ReCaptcha Service verwendet werden soll. Er muß wärend
                    der Erstellung spezifiziert werden, auch wenn er jederzeit überschrieben werden
                    kann.
                </para>
            </listitem>

            <listitem>
                <para>
                    <methodname>setPubKey($key)</methodname> und
                    <methodname>getPubKey()</methodname> erlauben es den öffentlichen Schlüssel zu
                    spezifizieren der mit dem ReCaptcha Service verwendet werden soll. Er muß wärend
                    der Erstellung spezifiziert werden, auch wenn er jederzeit überschrieben werden
                    kann.
                </para>
            </listitem>

            <listitem>
                <para>
                    <methodname>setService(Zend_Service_ReCaptcha $service)</methodname> und
                    <methodname>getService()</methodname> erlauben es das ReCaptcha Serviceobjekt zu
                    setzen und erhalten.
                </para>
            </listitem>
        </itemizedlist>
    </sect2>
</sect1>
