<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: 20876 -->
<!-- Reviewed: no -->
<sect1 id="migration.16">
    <title>Zend Framework 1.6</title>

    <para>
        Wenn man von einem älteren Release auf Zend Framework 1.6 oder höher hochrüstet sollte
        man die folgenden Migrations Hinweise beachten.
    </para>

    <sect2 id="migration.16.zend.controller">
        <title>Zend_Controller</title>

        <sect3 id="migration.16.zend.controller.dispatcher">
            <title>Änderungen im Dispatcher Interface</title>

            <para>
                Benutzer haben uns darauf aufmerksam gemacht das sowohl
                <classname>Zend_Controller_Front</classname> als auch
                <classname>Zend_Controller_Router_Route_Module</classname> Methoden des Dispatchers
                verwenden die nicht im Dispatcher Interface waren. Wir haben jetzt die folgenden
                drei Methoden hinzugefügt um sicherzustellen das eigene Dispatcher weiterhin mit der
                ausgelieferten Implementation arbeiten:
            </para>

            <itemizedlist>
                <listitem>
                    <para>
                        <methodname>getDefaultModule()</methodname>: Sollte den Namen des
                        Standardmoduls zurückgeben.
                    </para>
                </listitem>

                <listitem>
                    <para>
                        <methodname>getDefaultControllerName()</methodname>: Sollte den Namen des
                        Standardcontrollers zurückgeben.
                    </para>
                </listitem>

                <listitem>
                    <para>
                        <methodname>getDefaultAction()</methodname>: Sollte den Namen der
                        Standardaktion zurückgeben.
                    </para>
                </listitem>
            </itemizedlist>
        </sect3>
    </sect2>

    <sect2 id="migration.16.zend.file.transfer">
        <title>Zend_File_Transfer</title>

        <sect3 id="migration.16.zend.file.transfer.validators">
            <title>Änderungen bei der Verwendung von Prüfungen</title>

            <para>
                Wie von Benutzern festgestellt wurde, haben die Prüfungen von
                <classname>Zend_File_Transfer</classname> nicht auf die gleiche Art und Weise
                funktioniert wie standardmäßigen von <classname>Zend_Form</classname>.
                <classname>Zend_Form</classname> erlaubt die Verwendung eines
                <varname>$breakChainOnFailure</varname> Parameters der die Prüfung für alle weitere
                Prüfer unterbricht wenn ein Prüffehler aufgetreten ist.
            </para>

            <para>
                Deshalb wurde dieser Parameter bei allen bestehenden Prüfungen von
                <classname>Zend_File_Transfer</classname> hinzugefügt.
            </para>

            <itemizedlist>
                <listitem>
                    <para>
                        Alte <acronym>API</acronym> der Methode:
                        <methodname>addValidator($validator, $options, $files)</methodname>.
                    </para>
                </listitem>

                <listitem>
                    <para>
                        Neue <acronym>API</acronym> der Methode:
                        <methodname>addValidator($validator, $breakChainOnFailure, $options,
                            $files)</methodname>.
                    </para>
                </listitem>
            </itemizedlist>

            <para>
                Um also eigene Skripte auf die neue <acronym>API</acronym> zu migrieren, muß einfach
                ein <constant>FALSE</constant> nach der Definition der gewünschten Prüfung
                hinzugefügt werden.
            </para>

            <example id="migration.16.zend.file.transfer.example">
                <title>Wie man eigene Dateiprüfungen von 1.6.1 auf 1.6.2 ändert</title>

                <programlisting language="php"><![CDATA[
// Beispiel für 1.6.1
$upload = new Zend_File_Transfer_Adapter_Http();
$upload->addValidator('FilesSize', array('1B', '100kB'));

// Selbes Beispiel für 1.6.2 und neuer
// Beachte das hinzugefügte boolsche false
$upload = new Zend_File_Transfer_Adapter_Http();
$upload->addValidator('FilesSize', false, array('1B', '100kB'));
]]></programlisting>
            </example>
        </sect3>
    </sect2>
</sect1>
