<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: 20872 -->
<!-- Reviewed: no -->
<sect1 id="zend.pdf.pages">
    <title>Les pages d'un document</title>

    <sect2 id="zend.pdf.pages.creation">
        <title>Création de page</title>

        <para>
            Les pages d'un document <acronym>PDF</acronym> sont représentés par la classe
            <classname>Zend_Pdf_Page</classname>
        </para>

        <para>
            Les pages d'un <acronym>PDF</acronym> proviennent d'un <acronym>PDF</acronym> existant, ou sont créées à partir de
            rien.
        </para>

        <para>
            Une nouvelle page peut-être obtenu en créant un nouvel objet
            <classname>Zend_Pdf_Page</classname> ou en appelant la méthode
            <methodname>Zend_Pdf::newPage()</methodname>qui retourne un objet
            <classname>Zend_Pdf_Page</classname>. La différence est que la méthode
            <methodname>Zend_Pdf::newPage()</methodname> crée une page directement attachée au
            document. A la différence des pages non attachées à un document, elle ne peut-être
            utilisée dans plusieurs documents <acronym>PDF</acronym>, mais est un peu plus performante. <footnote>
                <para>
                    C'est une limitation de la version courante du module
                    <classname>Zend_Pdf</classname>. Ce sera corrigé dans une future version. Mais
                    les pages non attachées à un document donneront toujours de meilleurs résultats
                    pour partager une page entre plusieurs documents.
                </para>
                </footnote>. C'est à vous de choisir quel approche doit-être utilisée.
            </para>

        <para>
            Les méthodes <methodname>Zend_Pdf::newPage()</methodname> et
            <classname>Zend_Pdf_Page</classname> prennent le même paramètre. C'est la taille de la
            page ($x, $y) en point (1/72 inch soit 0,352778 mm), ou une constante prédéfinie, qui
            correspond au format du papier : <itemizedlist>
                    <listitem>
                        <para>Zend_Pdf_Page::SIZE_A4</para>
                    </listitem>

                    <listitem>
                        <para>Zend_Pdf_Page::SIZE_A4_LANDSCAPE</para>
                    </listitem>

                    <listitem>
                        <para>Zend_Pdf_Page::SIZE_LETTER</para>
                    </listitem>

                    <listitem>
                        <para>Zend_Pdf_Page::SIZE_LETTER_LANDSCAPE</para>
                    </listitem>
                </itemizedlist>
            </para>

        <para>
            Les pages du document sont stockées dans l'attribut public <varname>$pages</varname> de
            la classe <classname>Zend_Pdf</classname>. C'est un tableau d'objet
            <classname>Zend_Pdf_Page</classname>. Il définit l'ensemble des pages, ainsi que l'ordre
            de celle-ci et peut-être manipulé comme un tableau classique :
        </para>

        <example id="zend.pdf.pages.example-1">
            <title>Gestion des pages d'un document PDF</title>

            <programlisting language="php"><![CDATA[
...
// Inverse l'ordre des pages
$pdf->pages = array_reverse($pdf->pages);
...
// Ajoute une nouvelle page
$pdf->pages[] = new Zend_Pdf_Page(Zend_Pdf_Page::SIZE_A4);
// Ajoute une nouvelle page
$pdf->pages[] = $pdf->newPage(Zend_Pdf_Page::SIZE_A4);

// Retire la page spécifiée
unset($pdf->pages[$id]);
...
]]></programlisting>
        </example>
    </sect2>

    <sect2 id="zend.pdf.pages.cloning">
        <title>Clonage de page</title>

        <para>
            Les pages existantes d'un <acronym>PDF</acronym> peuvent être clonées en créant un nouvel objet
            <classname>Zend_Pdf_Page</classname> avec la page existante comme paramètre :
        </para>

        <example id="zend.pdf.pages.example-2">
            <title>Cloner une page existante</title>

            <programlisting language="php"><![CDATA[
...
// Stocke le modèle dans une variable séparée
$template = $pdf->pages[$templatePageIndex];
...
// Ajoute une nouvelle page
$page1 = new Zend_Pdf_Page($template);
$pdf->pages[] = $page1;
...

// Ajoute une autre page
$page2 = new Zend_Pdf_Page($template);
$pdf->pages[] = $page2;
...

// Enlève la page modèle du document
unset($pdf->pages[$templatePageIndex]);
...
]]></programlisting>
        </example>

        <para>C'est pratique si plusieurs pages doivent être créées sur le même modèle.</para>

        <caution>
            <para>
                Important ! La page clonée partage quelques ressources <acronym>PDF</acronym> avec la page
                modèle, donc ceci doit être utilisé seulement dans le même document qu'une page
                modèle. Le document modifié peut être sauvegardé comme nouveau document.
            </para>
        </caution>
    </sect2>
</sect1>