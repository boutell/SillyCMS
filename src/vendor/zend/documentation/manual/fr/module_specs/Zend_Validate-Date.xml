<?xml version="1.0" encoding="UTF-8"?>
<!-- Reviewed: no -->
<!-- EN-Revision: 22129 -->
<sect2 id="zend.validate.set.date">
    <title>Date</title>

    <para>
        <classname>Zend_Validate_Date</classname> permet de valider qu'une donnée est bien une date.
        Le validateur gère la localisation.
    </para>

    <sect3 id="zend.validate.set.date.options">
        <title>Options supportées par Zend_Validate_Date</title>

        <para>
            Les options suivantes sont supportées par <classname>Zend_Validate_Date</classname>:
        </para>

        <itemizedlist>
            <listitem>
                <para>
                    <emphasis><property>format</property></emphasis>: affecte le format utilisé
                    pour écrire la date.
                </para>
            </listitem>

            <listitem>
                <para>
                    <emphasis><property>locale</property></emphasis>: affecte la locale utilisée lors
                    de la validation.
                </para>
            </listitem>
        </itemizedlist>
    </sect3>

    <sect3 id="zend.validate.set.date.basic">
        <title>Validation de dates par défaut</title>

        <para>
            La manière la plus simple de valider une date est d'utiliser le format par défaut du
            système. Ce format est utilisé lorsqu'aucune locale et aucun format particulier n'est
            précisé. Voyez l'exemple ci-après:
        </para>

        <programlisting language="php"><![CDATA[
$validator = new Zend_Validate_Date();

$validator->isValid('2000-10-10');   // retourne true
$validator->isValid('10.10.2000'); // retourne false
]]></programlisting>

        <para>
            Le format par défaut de <classname>Zend_Validate_Date</classname> est 'yyyy-MM-dd'.
        </para>
    </sect3>

    <sect3 id="zend.validate.set.date.localized">
        <title>Validation de dates localisées</title>

        <para>
            <classname>Zend_Validate_Date</classname> peut aussi valider les dates dans un format localisé
            donné. En utilisant l'option <property>locale</property> vous pouvez définir la locale utilisée
            pour valider le format de la date.
        </para>

        <programlisting language="php"><![CDATA[
$validator = new Zend_Validate_Date(array('locale' => 'de'));

$validator->isValid('10.Feb.2010'); // retourne true
$validator->isValid('10.May.2010'); // retourne false
]]></programlisting>

        <para>
            L'option <property>locale</property> affecte le format par défaut de la date. Dans l'exemple ci-dessus
            il s'agit de 'dd.MM.yyyy' qui est le format pour une locale 'de'.
        </para>
    </sect3>

    <sect3 id="zend.validate.set.date.formats">
        <title>Formats de dates personnalisés</title>

        <para>
            <classname>Zend_Validate_Date</classname> supporte des formats de date personnalisés.
            Utilisez l'option <property>format</property> pour cela.
        </para>

        <programlisting language="php"><![CDATA[
$validator = new Zend_Validate_Date(array('format' => 'yyyy'));

$validator->isValid('2010'); // retourne true
$validator->isValid('May');  // retourne false
]]></programlisting>

        <para>
            Vous pouvez combiner <property>format</property> et <property>locale</property>.
            Dans ce cas vous pouvez utiliser des noms de mois ou de jours localisés.
        </para>

        <programlisting language="php"><![CDATA[
$validator = new Zend_Validate_Date(array('format' => 'yyyy MMMM', 'locale' => 'de));

$validator->isValid('2010 Dezember'); // retourne true
$validator->isValid('2010 June');     // retourne false
]]></programlisting>
    </sect3>
</sect2>
<!--
vim:se ts=4 sw=4 et:
-->
