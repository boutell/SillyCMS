<?xml version="1.0" encoding="UTF-8"?>
<!-- Reviewed: no -->
<!-- EN-Revision: 22129 -->
<sect2 id="zend.validate.set.float">
    <title>Float</title>

    <para>
        <classname>Zend_Validate_Float</classname> permet de valider si une donnée contient une valeur
        flottante. Les entrées localisées sont supportées.
    </para>

    <sect3 id="zend.validate.set.float.options">
        <title>Options supportées par Zend_Validate_Float</title>

        <para>
            Les options suivantes sont supportées par <classname>Zend_Validate_Float</classname>:
        </para>

        <itemizedlist>
            <listitem>
                <para>
                    <emphasis><property>locale</property></emphasis>: Affecte la locale utilisée lors
                    de la validation.
                </para>
            </listitem>
        </itemizedlist>
    </sect3>

    <sect3 id="zend.validate.set.float.basic">
        <title>Validation float simple</title>

        <para>
            Au plus simple, vous utiliserez les paramètres systèmes, c'est à dire la locale correspondant
            à l'environnement:
        </para>

        <programlisting language="php"><![CDATA[
$validator = new Zend_Validate_Float();

$validator->isValid(1234.5);   // retourne true
$validator->isValid('10a01'); // retourne false
$validator->isValid('1,234.5'); // retourne true
]]></programlisting>

        <para>
            Dans l'exemple ci-dessus, nous supposons un environnement à locale "en".
        </para>
    </sect3>

    <sect3 id="zend.validate.set.float.localized">
        <title>Validation float localisée</title>

        <para>
            Il peut être parfois nécessire de prendre en compte la locale pour valider une valeur flottante.
            Les flottants sont souvent écrits de manière différente en fonction de la locale/région. Par exemple
            en anglais on écrirait "1.5", mais en allemand "1,5" et dans d'autres langues le regroupement de chiffres
            pourrait être utilisé.
        </para>

        <para>
            <classname>Zend_Validate_Float</classname> peut valider de telles notations. Il est alors limité à la locale
            utilisée. Voyez les exemples ci-après:
        </para>

        <programlisting language="php"><![CDATA[
$validator = new Zend_Validate_Float(array('locale' => 'de'));

$validator->isValid(1234.5); // retourne true
$validator->isValid("1 234,5"); // retourne false
$validator->isValid("1.234"); // retourne true
]]></programlisting>

        <para>
            Comme vous le voyez, en utilisant une locale, l'entrée est validée en fonction de celle-ci. Avec une locale
            différente vous auriez obtenu des résultats éventuellement différents.
        </para>

        <para>
            La locale peut être affectée/récupérée après la création de l'objet de validation au moyen des méthodes
            <methodname>setLocale()</methodname> et <methodname>getLocale()</methodname>.
        </para>
    </sect3>
</sect2>
<!--
vim:se ts=4 sw=4 et:
-->
