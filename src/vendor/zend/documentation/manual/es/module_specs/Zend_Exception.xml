<?xml version="1.0" encoding="UTF-8"?>
    <!-- EN-Revision: 19661 -->
    <!-- Reviewed: no -->
    <!-- Traducir todo de nuevo-->
<sect1 id="zend.exception.using">

    <title>Uso de Excepciones</title>

    <para>
        <classname>Zend_Exception</classname>
        es simplemente la clase base para todos los
        las excepciones lanzadas dentro de Zend
        Framework.
    </para>

    <example id="zend.exception.using.example">
        <title>Capturando una Excepcion</title>
        <para>
            El siguiente listado de c�digo muestra c�mo capturar una excepci�n
            lanzado en Zend Framework:</para>
        <programlisting language="php"><![CDATA[
try {
    // Calling Zend_Loader::loadClass() with a non-existant class will cause
    // an exception to be thrown in Zend_Loader;
    Zend_Loader::loadClass('nonexistantclass');
} catch (Zend_Exception $e) {
    echo "Caught exception: " . get_class($e) . "\n";
    echo "Message: " . $e->getMessage() . "\n";
    // Other code to recover from the error
}
]]></programlisting>
    </example>
    <para>
        <classname>Zend_Exception</classname>
        can be used as a catch-all
        exception class in a catch block to trap all exceptions thrown by
        Zend
        Framework classes. This can be useful when the program can not recover
        by catching a
        specific exception type.
    </para>

    <para>La documentación de cada componente y clase de Zend Framework
        contienen informaci�n
        espec�fica sobre los m�todos que generan excepciones, la
        circunstancias en que provocan una
        excepci�n a ser lanzado,
        y los diferentes tipos de excepci�n que puede ser lanzadas. </para>

</sect1>